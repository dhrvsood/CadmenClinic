// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fpxTiFS69ULcX4wDGEfw3c
// Component: Npe59kGyeDl0
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  hasVariant,
  set as $stateSet,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Button from "../../Button"; // plasmic-import: 0o-OkGmTYJg3/component
import ReviewsRatingPill from "../../ReviewsRatingPill"; // plasmic-import: lUTkTuQcsEcx/component
import BenefitsOfBotoxCard from "../../BenefitsOfBotoxCard"; // plasmic-import: NylQq7mzP_E5/component
import TestimonialsSlider from "@/components/TestimonialsSlider/TestimonialsSlider"; // plasmic-import: J0SSSRogRoTR/codeComponent
import TestimonialCard from "../../TestimonialCard"; // plasmic-import: zWVJ2Qd7n2nR/component
import TextToggler from "../../TextToggler"; // plasmic-import: nk356y6CCF9w/component
import BotoxProcessCard from "../../BotoxProcessCard"; // plasmic-import: 7fDdA2kY52_t/component
import AffordableBotoxCard from "../../AffordableBotoxCard"; // plasmic-import: dCCKAyC8oXyh/component
import FaceSection from "../../FaceSection"; // plasmic-import: dOVgE0OgS0yG/component
import AreasInteractive from "../../AreasInteractive"; // plasmic-import: cNLJfmXsSSOr/component
import BotoxResultCard from "../../BotoxResultCard"; // plasmic-import: LkkGmqnkkLRj/component
import SelectPill from "../../SelectPill"; // plasmic-import: XgOD49Zg0vP7/component
import HowItWorksCard from "../../HowItWorksCard"; // plasmic-import: w7EJDoU6NMVc/component
import AgeGroupsCard from "../../AgeGroupsCard"; // plasmic-import: 0IByburiocI3/component
import IconLayeredCircles from "../../IconLayeredCircles"; // plasmic-import: otc6Jw_feodx/component
import Faq from "../../Faq"; // plasmic-import: kXqZTEGKWOeX/component
import OurLocationSection from "../../OurLocationSection"; // plasmic-import: 90jT_0Y9mL-p/component
import FooterNew from "../../FooterNew"; // plasmic-import: NE5t6IteXed-/component
import { useScreenVariants as useScreenVariants_4IUcgkiijTv2 } from "../blank_website/PlasmicGlobalVariant__Screen"; // plasmic-import: 4iUCGKIIJTv2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../blank_website/plasmic.module.css"; // plasmic-import: fpxTiFS69ULcX4wDGEfw3c/projectcss
import sty from "./PlasmicBotoxSeo.module.css"; // plasmic-import: Npe59kGyeDl0/css
import TimeSvgIcon from "./icons/PlasmicIcon__TimeSvg"; // plasmic-import: zfqY32R6mG7W/icon
import Face2SvgIcon from "./icons/PlasmicIcon__Face2Svg"; // plasmic-import: na4dw5YDiVRa/icon
import HeartSvg3Icon from "./icons/PlasmicIcon__HeartSvg3"; // plasmic-import: Y1Pl_F2w77Si/icon
import TimeSvg3Icon from "./icons/PlasmicIcon__TimeSvg3"; // plasmic-import: ncO_R5hfk1Yu/icon
import IconFace2Icon from "./icons/PlasmicIcon__IconFace2"; // plasmic-import: XXHGqwEaOKMh/icon
import HeartSvg4Icon from "./icons/PlasmicIcon__HeartSvg4"; // plasmic-import: QQ0zzfq_LES4/icon
import PointIcon from "./icons/PlasmicIcon__Point"; // plasmic-import: dMjm7kjmXw_d/icon

createPlasmicElementProxy;

export const PlasmicBotoxSeo__VariantProps = new Array();

export const PlasmicBotoxSeo__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBotoxSeo__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "selectedArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Forehead"
      },
      {
        path: "areasList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            name: "Forehead",
            range: "$100 - $200",
            units: "10-20 units",
            face_dot: { left: "51.5%", top: "10%" }
          },
          {
            name: "Brow Lift",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "67%", top: "22%" }
          },
          {
            name: "Crow's Feet",
            range: "$50 - $150",
            units: "5-15 units",
            face_dot: { left: "75%", top: "37%" }
          },
          {
            name: "11'S",
            range: "$200 - $300",
            units: "20-30 units",
            face_dot: { left: "51.5%", top: "27%" }
          },
          {
            name: "Nasolabial Folds",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "36%", top: "61%" }
          },
          {
            name: "Gummy Smile",
            range: "$100",
            units: "Varies",
            face_dot: { left: "49%", top: "65%" }
          },
          {
            name: "Lip Flip",
            range: "$125",
            units: "Varies",
            face_dot: { left: "58%", top: "73%" }
          },
          {
            name: "Chin Dimpling",
            range: "$40 - $100",
            units: "4-10 units",
            face_dot: { left: "51.5%", top: "91%" }
          },
          {
            name: "Masseter",
            range: "$200 - $400",
            units: "20-40 units",
            face_dot: { left: "65%", top: "63%" }
          }
        ]
      },
      {
        path: "botoxResultsList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title: "Metabolism",
            description:
              "People with faster metabolisms may find that their Botox wears off quicker.",
            icon: "/plasmic/image_lab_2024/images/personSvg2.svg",
            image: "/plasmic/image_lab_2024/images/image26.jpg"
          },
          {
            title: "Treatment Area",
            description:
              "Areas with larger muscles, such as the jaw, may break down Botox more quickly.",
            icon: "/plasmic/image_lab_2024/images/personSvg2.svg",
            image: "/plasmic/image_lab_2024/images/imagePng60.png"
          },
          {
            title: "Aftercare and Lifestyle",
            description:
              "Avoiding intense exercise, sun exposure & facial massages immediately after treatment can help prolong results.",
            icon: "/plasmic/image_lab_2024/images/heartSvg2.svg",
            image: "/plasmic/image_lab_2024/images/imagePng57.png"
          }
        ]
      },
      {
        path: "botoxResultArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Metabolism"
      },
      {
        path: "ageGroupsList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            years: "20 years",
            title: "Botox in Your 20s: Preventative Measures",
            description:
              "In your 20s, you may not yet see prominent wrinkles or lines, but subtle changes often begin around this age. Many people start with preventative Botox, targeting areas where dynamic lines\u2014caused by repeated facial movements\u2014are beginning to form. The goal of preventative Botox is to prevent lines from becoming deeply etched in the skin as you age.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "Forehead lines, frown lines between the brows (glabellar lines), and crow\u2019s feet."
              },
              {
                title: "Benefits:",
                description:
                  "Botox helps minimize the formation of fine lines before they settle into deeper wrinkles, preserving a smooth complexion."
              },
              {
                title: "Fun Fact:",
                description:
                  "Preventative Botox doesn\u2019t mean you won\u2019t need Botox later; it just means you may need it less frequently or in smaller doses as you age."
              }
            ]
          },
          {
            years: "30 years",
            title: "Botox in Your 30s: Early Treatment for Fine Lines",
            description:
              "By your 30s, fine lines may have started to develop, especially if you're prone to frequent expressions like squinting or frowning. Botox treatments at this age are focused on smoothing out these early signs of aging while preventing them from getting deeper.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "The forehead, between the eyebrows, and around the eyes."
              },
              {
                title: "Benefits:",
                description:
                  "Botox at this stage can reduce the appearance of existing fine lines and provide a smoother, refreshed look. Regular treatments can help maintain this youthful appearance."
              },
              {
                title: "Fun Fact:",
                description:
                  "Many people in their 30s find that Botox every 3-6 months gives the best results, depending on how quickly their body metabolizes the product."
              }
            ]
          },
          {
            years: "40 years",
            title: "Botox in Your 40s: Managing Dynamic and Static Wrinkles",
            description:
              "In your 40s, Botox can address more pronounced wrinkles, often caused by years of repeated expressions and sun exposure. While some wrinkles may have settled in, Botox can still soften these lines, giving you a more youthful look.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "Dynamic wrinkles (those visible when moving your face) around the eyes, forehead, and mouth, as well as some static wrinkles that are visible at rest."
              },
              {
                title: "Benefits:",
                description:
                  "By targeting dynamic wrinkles, Botox can help reduce their prominence. Additionally, Botox may be paired with other treatments, like dermal fillers, to provide a fuller rejuvenation effect for static lines."
              },
              {
                title: "Fun Fact:",
                description:
                  "Many clients in their 40s opt for Botox every 3-4 months to maintain results."
              }
            ]
          },
          {
            years: "50 years",
            title: "Botox in Your 50s and Beyond Smoothing Deep Lines",
            description:
              "In your 50s and beyond, Botox can still provide beautiful results, often as part of a larger anti-aging regimen. At this stage, Botox is commonly combined with other aesthetic treatments, such as dermal fillers or laser therapies, to address deeper lines and overall skin laxity.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "Areas with deeper wrinkles, such as the forehead, around the eyes, and near the mouth."
              },
              {
                title: "Benefits:",
                description:
                  "Botox in these areas helps to reduce the appearance of deep lines, and when paired with other treatments, it can create a lifted, youthful look."
              },
              {
                title: "Recommended Approach:",
                description:
                  "A combination of Botox, fillers, and possibly laser treatments can work synergistically to provide natural and comprehensive facial rejuvenation."
              }
            ]
          }
        ]
      },
      {
        path: "ageGroupsArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "20 years"
      },
      {
        path: "areasInteractive.data",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            name: "Forehead",
            range: "$100 - $200",
            units: "10-20 units",
            face_dot: { left: "51.5%", top: "10%" }
          },
          {
            name: "Brow Lift",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "67%", top: "22%" }
          },
          {
            name: "Crow's Feet",
            range: "$50 - $150",
            units: "5-15 units",
            face_dot: { left: "75%", top: "37%" }
          },
          {
            name: "11'S",
            range: "$200 - $300",
            units: "20-30 units",
            face_dot: { left: "51.5%", top: "27%" }
          },
          {
            name: "Nasolabial Folds",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "36%", top: "61%" }
          },
          {
            name: "Gummy Smile",
            range: "$100",
            units: "Varies",
            face_dot: { left: "49%", top: "65%" }
          },
          {
            name: "Lip Flip",
            range: "$125",
            units: "Varies",
            face_dot: { left: "58%", top: "73%" }
          },
          {
            name: "Chin Dimpling",
            range: "$40 - $100",
            units: "4-10 units",
            face_dot: { left: "51.5%", top: "91%" }
          },
          {
            name: "Masseter",
            range: "$200 - $400",
            units: "20-40 units",
            face_dot: { left: "65%", top: "63%" }
          }
        ]
      },
      {
        path: "areasInteractive.selected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Forehead"
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_4IUcgkiijTv2()
  });
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <section
        data-plasmic-name={"topBotoxServicesSection"}
        data-plasmic-override={overrides.topBotoxServicesSection}
        className={classNames(projectcss.all, sty.topBotoxServicesSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__zV9GF)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"prices"}
            data-plasmic-override={overrides.prices}
            hasGap={true}
            className={classNames(projectcss.all, sty.prices)}
          >
            <div
              data-plasmic-name={"heading"}
              data-plasmic-override={overrides.heading}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.heading
              )}
            >
              {"$14.00"}
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"price"}
              data-plasmic-override={overrides.price}
              hasGap={true}
              className={classNames(projectcss.all, sty.price)}
            >
              <div
                data-plasmic-name={"heading2"}
                data-plasmic-override={overrides.heading2}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading2
                )}
              >
                {"$9.99"}
              </div>
              <div
                data-plasmic-name={"heading3"}
                data-plasmic-override={overrides.heading3}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading3
                )}
              >
                {"/unit botox"}
              </div>
            </Stack__>
            <div
              data-plasmic-name={"heading4"}
              data-plasmic-override={overrides.heading4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.heading4
              )}
            >
              {"new patients deal"}
            </div>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___7GAj3)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oVJzR)}
            >
              <div
                data-plasmic-name={"heading5"}
                data-plasmic-override={overrides.heading5}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading5
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0C7A7B", fontStyle: "italic" }}
                            >
                              {"Top Botox Services"}
                            </span>
                          </React.Fragment>
                        ) : (
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0C7A7B", fontStyle: "italic" }}
                            >
                              {"Top Botox Services"}
                            </span>
                          </React.Fragment>
                        )}
                      </h1>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h1
                        data-plasmic-name={"h1"}
                        data-plasmic-override={overrides.h1}
                        className={classNames(
                          projectcss.all,
                          projectcss.h1,
                          projectcss.__wab_text,
                          sty.h1
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0C7A7B", fontStyle: "italic" }}
                            >
                              {"Top Botox Services"}
                            </span>
                          </React.Fragment>
                        ) : (
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ color: "#0C7A7B", fontStyle: "italic" }}
                            >
                              {"Top Botox Services"}
                            </span>
                          </React.Fragment>
                        )}
                      </h1>
                    }

                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                )}
              </div>
              <div
                data-plasmic-name={"supportingText"}
                data-plasmic-override={overrides.supportingText}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.supportingText
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#535556" }}
                    >
                      {
                        "Enhance your confidence with Botox treatments at ImageLab. "
                      }
                    </span>
                  </React.Fragment>
                ) : hasVariant(globalVariants, "screen", "midsize") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#535556" }}
                    >
                      {
                        "Enhance your confidence with Botox treatments  at ImageLab. Discover smoother, more youthful-looking skin with personalized care from our expert team, exclusive offers, and premium-quality results tailored just for you."
                      }
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#535556" }}
                    >
                      {
                        "Enhance your confidence with Botox treatments at ImageLab. Discover smoother, more youthful-looking skin with personalized care from our expert team, exclusive offers, and premium-quality results tailored just for you."
                      }
                    </span>
                  </React.Fragment>
                )}
              </div>
            </Stack__>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__lXiYo)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__m842O)}
              displayHeight={"232px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng6.png",
                fullWidth: 485,
                fullHeight: 465,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__p0IUr
              )}
            >
              {"Youthful Skin"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dZhtS
              )}
            >
              {"Beauty Enhancement"}
            </div>
          </div>
          <Button
            data-plasmic-name={"topBotoxServicesButton"}
            data-plasmic-override={overrides.topBotoxServicesButton}
            className={classNames("__wab_instance", sty.topBotoxServicesButton)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__c4Pe
              )}
            >
              {"Book Now"}
            </div>
          </Button>
          <ReviewsRatingPill
            data-plasmic-name={"reviewsRatingPill"}
            data-plasmic-override={overrides.reviewsRatingPill}
            className={classNames("__wab_instance", sty.reviewsRatingPill)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__gyOeq)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__vvEMp)}
              displayHeight={"292px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"auto"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng3.png",
                fullWidth: 568,
                fullHeight: 584,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cw7
              )}
            >
              {"Youthful Skin"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___4Fnx
              )}
            >
              {"Beauty Enhancement"}
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__iw1Li)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__sPk1W)}
              displayHeight={"292px"}
              displayMaxHeight={"none"}
              displayMaxWidth={"auto"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng4.png",
                fullWidth: 526,
                fullHeight: 584,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___5TBjx
              )}
            >
              {"Confidence Boost"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__qX2Ci
              )}
            >
              {"Smooth Skin"}
            </div>
          </div>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"benefitsOfBotoxSection"}
        data-plasmic-override={overrides.benefitsOfBotoxSection}
        className={classNames(projectcss.all, sty.benefitsOfBotoxSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__yD9Qq)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"benefitsOfBotoxHeader"}
            data-plasmic-override={overrides.benefitsOfBotoxHeader}
            hasGap={true}
            className={classNames(projectcss.all, sty.benefitsOfBotoxHeader)}
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__wqj6R
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Benefits of"}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Botox Procedure for "}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#0C7A7B", fontStyle: "italic" }}
                  >
                    {"Radiant, Confident You"}
                  </span>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Benefits of Botox Procedure for a"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#0C7A7B" }}
                  >
                    {"Radiant, Confident You"}
                  </span>
                </React.Fragment>
              )}
            </h2>
            <p
              className={classNames(
                projectcss.all,
                projectcss.p,
                projectcss.__wab_text,
                sty.p__d1OAm
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Smooth wrinkles with natural results\nand minimal downtime."
                : "Smooth wrinkles with natural results and minimal downtime."}
            </p>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"benefitsOfBotoxCards"}
            data-plasmic-override={overrides.benefitsOfBotoxCards}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.benefitsOfBotoxCards,
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "how-botox-works-cards"
                : undefined
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9YJ6J)}
              style={
                hasVariant(globalVariants, "screen", "midsize")
                  ? { "max-width": "none" }
                  : undefined
              }
            >
              <BenefitsOfBotoxCard
                className={classNames(
                  "__wab_instance",
                  sty.benefitsOfBotoxCard___8NOwx
                )}
                slot={
                  <div
                    data-plasmic-name={"supportingText12"}
                    data-plasmic-override={overrides.supportingText12}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.supportingText12
                    )}
                  >
                    {
                      "Botox softens wrinkles and fine lines for a refreshed, youthful appearance that looks completely natural. Our expert team ensures a subtle enhancement tailored to your unique features."
                    }
                  </div>
                }
                title={
                  <div
                    data-plasmic-name={"text2"}
                    data-plasmic-override={overrides.text2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text2
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Natural-Looking"}
                      </span>
                      <React.Fragment>{" Results"}</React.Fragment>
                    </React.Fragment>
                  </div>
                }
              />

              <BenefitsOfBotoxCard
                className={classNames(
                  "__wab_instance",
                  sty.benefitsOfBotoxCard__zGwHq
                )}
                icon={
                  <TimeSvgIcon
                    className={classNames(projectcss.all, sty.svg__k3VXt)}
                    role={"img"}
                  />
                }
                slot={
                  <div
                    data-plasmic-name={"supportingText13"}
                    data-plasmic-override={overrides.supportingText13}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.supportingText13
                    )}
                  >
                    {
                      "Botox treatments are fast, taking as little as 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                    }
                  </div>
                }
                title={
                  <div
                    data-plasmic-name={"text3"}
                    data-plasmic-override={overrides.text3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text3
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Quick & Convenient"}
                      </span>
                    </React.Fragment>
                  </div>
                }
              />

              <BenefitsOfBotoxCard
                className={classNames(
                  "__wab_instance",
                  sty.benefitsOfBotoxCard__wksbv
                )}
                icon={
                  <Face2SvgIcon
                    className={classNames(projectcss.all, sty.svg__gi1B3)}
                    role={"img"}
                  />
                }
                slot={
                  <div
                    data-plasmic-name={"supportingText14"}
                    data-plasmic-override={overrides.supportingText14}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.supportingText14
                    )}
                  >
                    {
                      "A single Botox treatment provides results that can last up to 4 months, keeping your skin smooth and youthful for longer. Regular treatments help maintain your look effortlessly over time."
                    }
                  </div>
                }
                title={
                  <div
                    data-plasmic-name={"text4"}
                    data-plasmic-override={overrides.text4}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text4
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Long-Lasting "}
                      </span>
                      <React.Fragment>{"Effects"}</React.Fragment>
                    </React.Fragment>
                  </div>
                }
              />

              <BenefitsOfBotoxCard
                className={classNames(
                  "__wab_instance",
                  sty.benefitsOfBotoxCard__o1Xu8
                )}
                icon={
                  <HeartSvg3Icon
                    className={classNames(projectcss.all, sty.svg__f8Ns5)}
                    role={"img"}
                  />
                }
                slot={
                  <div
                    data-plasmic-name={"supportingText18"}
                    data-plasmic-override={overrides.supportingText18}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.supportingText18
                    )}
                  >
                    {
                      "Botox not only reduces existing wrinkles but also helps prevent new ones from forming by relaxing facial muscles. It\u2019s a proactive approach to maintaining your youthful glow for years to come."
                    }
                  </div>
                }
                title={
                  <div
                    data-plasmic-name={"text8"}
                    data-plasmic-override={overrides.text8}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text8
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"Preventative Care"}
                      </span>
                    </React.Fragment>
                  </div>
                }
              />
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"benefitsOfBotoxCardsMobile"}
            data-plasmic-override={overrides.benefitsOfBotoxCardsMobile}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.benefitsOfBotoxCardsMobile,
              "how-botox-works-cards"
            )}
          >
            <BenefitsOfBotoxCard
              className={classNames(
                "__wab_instance",
                sty.benefitsOfBotoxCard__fWOzA
              )}
              slot={
                <div
                  data-plasmic-name={"supportingText15"}
                  data-plasmic-override={overrides.supportingText15}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.supportingText15
                  )}
                >
                  {
                    "Botox softens wrinkles and fine lines for a refreshed, youthful appearance that looks completely natural. Our expert team ensures a subtle enhancement tailored to your unique features."
                  }
                </div>
              }
              title={
                <div
                  data-plasmic-name={"text5"}
                  data-plasmic-override={overrides.text5}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text5
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Natural-Looking"}
                    </span>
                    <React.Fragment>{" Results"}</React.Fragment>
                  </React.Fragment>
                </div>
              }
            />

            <BenefitsOfBotoxCard
              className={classNames(
                "__wab_instance",
                sty.benefitsOfBotoxCard__pkMZh
              )}
              icon={
                <TimeSvg3Icon
                  className={classNames(projectcss.all, sty.svg__pUPpd)}
                  role={"img"}
                />
              }
              slot={
                <div
                  data-plasmic-name={"supportingText6"}
                  data-plasmic-override={overrides.supportingText6}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.supportingText6
                  )}
                >
                  {
                    "Botox treatments are fast, taking as little as 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                  }
                </div>
              }
              title={
                <div
                  data-plasmic-name={"text6"}
                  data-plasmic-override={overrides.text6}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text6
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Quick & Convenient"}
                    </span>
                  </React.Fragment>
                </div>
              }
            />

            <BenefitsOfBotoxCard
              className={classNames(
                "__wab_instance",
                sty.benefitsOfBotoxCard__dNrRw
              )}
              icon={
                <IconFace2Icon
                  className={classNames(projectcss.all, sty.svg___4Yc0S)}
                  role={"img"}
                />
              }
              slot={
                <div
                  data-plasmic-name={"supportingText7"}
                  data-plasmic-override={overrides.supportingText7}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.supportingText7
                  )}
                >
                  {
                    "A single Botox treatment provides results that can last up to 4 months, keeping your skin smooth and youthful for longer. Regular treatments help maintain your look effortlessly over time."
                  }
                </div>
              }
              title={
                <div
                  data-plasmic-name={"text7"}
                  data-plasmic-override={overrides.text7}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text7
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Long-Lasting"}
                    </span>
                    <React.Fragment>{" Effects"}</React.Fragment>
                  </React.Fragment>
                </div>
              }
            />

            <BenefitsOfBotoxCard
              className={classNames(
                "__wab_instance",
                sty.benefitsOfBotoxCard__bn72K
              )}
              icon={
                <HeartSvg4Icon
                  className={classNames(projectcss.all, sty.svg___5GP77)}
                  role={"img"}
                />
              }
              slot={
                <div
                  data-plasmic-name={"supportingText16"}
                  data-plasmic-override={overrides.supportingText16}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.supportingText16
                  )}
                >
                  {
                    "Botox not only reduces existing wrinkles but also helps prevent new ones from forming by relaxing facial muscles. It\u2019s a proactive approach to maintaining your youthful glow for years to come."
                  }
                </div>
              }
              title={
                <div
                  data-plasmic-name={"text9"}
                  data-plasmic-override={overrides.text9}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text9
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Preventative Care"}
                    </span>
                  </React.Fragment>
                </div>
              }
            />
          </Stack__>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"beforeAfterSection"}
        data-plasmic-override={overrides.beforeAfterSection}
        className={classNames(projectcss.all, sty.beforeAfterSection)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"beforeAfterHeader"}
          data-plasmic-override={overrides.beforeAfterHeader}
          hasGap={true}
          className={classNames(projectcss.all, sty.beforeAfterHeader)}
        >
          <h2
            className={classNames(
              projectcss.all,
              projectcss.h2,
              projectcss.__wab_text,
              sty.h2__vb63O
            )}
          >
            <React.Fragment>
              <React.Fragment>{"Before & "}</React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{
                  fontStyle: "italic",
                  fontWeight: 500,
                  color: "#D19D51"
                }}
              >
                {"After"}
              </span>
            </React.Fragment>
          </h2>
          <p
            className={classNames(
              projectcss.all,
              projectcss.p,
              projectcss.__wab_text,
              sty.p__zTptG
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly")
              ? "The results of our clients speak for themselves"
              : "The results of our clients speak for themselves"}
          </p>
        </Stack__>
        <div className={classNames(projectcss.all, sty.freeBox__veMx)}>
          <TestimonialsSlider
            data-plasmic-name={"beforeAfterSlider"}
            data-plasmic-override={overrides.beforeAfterSlider}
            className={classNames("__wab_instance", sty.beforeAfterSlider)}
            ctaLink={"#"}
            ctaText={"Act Now"}
            isDarkBg={false}
            settings={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? {
                    dots: false,
                    arrows: false,
                    infinite: true,
                    speed: 500,
                    slidesToShow: 1,
                    slidesToScroll: 1
                  }
                : hasVariant(globalVariants, "screen", "midsize")
                ? {
                    dots: false,
                    arrows: false,
                    infinite: true,
                    speed: 500,
                    slidesToShow: 2,
                    slidesToScroll: 1
                  }
                : {
                    dots: false,
                    arrows: false,
                    infinite: true,
                    speed: 500,
                    slidesToShow: 3,
                    slidesToScroll: 1
                  }
            }
          >
            <TestimonialCard
              avatar={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__cVxVg)}
                  displayHeight={"44px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"44px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng29.png",
                    fullWidth: 88,
                    fullHeight: 88,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames(
                "__wab_instance",
                sty.testimonialCard___3XFxL
              )}
              insta={"@juliaaa2000"}
              patient={"Julia Bing"}
              subtitle={"Results after one month with Botox"}
              title={"Julia\u2019s Results"}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__s7X19)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"100%"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/contentResultAvif.avif",
                  fullWidth: 486,
                  fullHeight: 480,
                  aspectRatio: undefined
                }}
              />
            </TestimonialCard>
            <TestimonialCard
              avatar={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__zuxSd)}
                  displayHeight={"auto"}
                  displayMaxHeight={"44px"}
                  displayMaxWidth={"44px"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng30.png",
                    fullWidth: 88,
                    fullHeight: 88,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames(
                "__wab_instance",
                sty.testimonialCard___5Kva4
              )}
              insta={"@melnyk_dasha"}
              patient={"Daria Melnyk"}
              subtitle={"Results after three weeks with Botox"}
              title={"Daria\u2019s Results"}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__hQ2Dl)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"100%"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/image301ResultAvif.avif",
                  fullWidth: 379,
                  fullHeight: 379,
                  aspectRatio: undefined
                }}
              />
            </TestimonialCard>
            <TestimonialCard
              avatar={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__rwyL0)}
                  displayHeight={"auto"}
                  displayMaxHeight={"44px"}
                  displayMaxWidth={"44px"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng31.png",
                    fullWidth: 88,
                    fullHeight: 88,
                    aspectRatio: undefined
                  }}
                />
              }
              className={classNames(
                "__wab_instance",
                sty.testimonialCard__sEbS9
              )}
              insta={"@annajohnson"}
              patient={"Anna Johnson"}
              subtitle={"Results after two weeks with Botox"}
              title={"Anna\u2019s Results"}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__jcskn)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"100%"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/_66Cc8477C61D4Fc872E5B045ImagelabBotoxResult1P800ResultAvif.avif",
                  fullWidth: 800,
                  fullHeight: 800,
                  aspectRatio: undefined
                }}
              />
            </TestimonialCard>
          </TestimonialsSlider>
        </div>
      </section>
      <Stack__
        as={"section"}
        data-plasmic-name={"whatIsBotoxSection"}
        data-plasmic-override={overrides.whatIsBotoxSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.whatIsBotoxSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___9V4GE)}
        >
          <div
            data-plasmic-name={"heading6"}
            data-plasmic-override={overrides.heading6}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.heading6
            )}
          >
            <React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{ fontStyle: "italic", color: "#D19D51" }}
              >
                {"What Is Botox"}
              </span>
              <React.Fragment> </React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{ color: "#080909" }}
              >
                {"and \nHow Does It Work?"}
              </span>
            </React.Fragment>
          </div>
          <div
            data-plasmic-name={"supportingText5"}
            data-plasmic-override={overrides.supportingText5}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.supportingText5
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#434445" }}
                >
                  {"Botox, short for Botulinum Toxin Type A,"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#434445" }}
                >
                  {"is a neurotoxin derived from"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#434445" }}
                >
                  {"Clostridium botulinum. "}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#434445" }}
                >
                  {
                    "Botox, short for Botulinum Toxin Type A, is a neurotoxin derived from Clostridium botulinum. "
                  }
                </span>
              </React.Fragment>
            )}
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__ilt4D)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__asLdy)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rGvkf)}
            >
              <div
                data-plasmic-name={"whatIsBotoxMobileText"}
                data-plasmic-override={overrides.whatIsBotoxMobileText}
                className={classNames(
                  projectcss.all,
                  sty.whatIsBotoxMobileText
                )}
              >
                <TextToggler
                  className={classNames(
                    "__wab_instance",
                    sty.textToggler__ekCr
                  )}
                  height={"140px"}
                  text={
                    "Despite its intimidating name, Botox is FDA-approved and widely used in medical and aesthetic treatments. By temporarily blocking signals from nerves to muscles, Botox prevents these muscles from contracting.<br> <br> This relaxation smooths the skin and reduces the appearance of wrinkles, making it an effective treatment for fine lines and dynamic wrinkles caused by repeated facial expressions."
                  }
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__tstww)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iigR
                  )}
                >
                  {"Science Behind Botox"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___3NXhV)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"title20"}
                    data-plasmic-override={overrides.title20}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title20)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg__lVZh)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iHtP
                      )}
                    >
                      {
                        "Botox is FDA-approved and trusted worldwide for both medical and aesthetic uses. This remarkable treatment works by temporarily relaxing targeted muscles, helping to reduce the appearance of fine lines and wrinkles caused by repeated facial expressions."
                      }
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"title21"}
                    data-plasmic-override={overrides.title21}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title21)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg__zfHU)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__azzsu
                      )}
                    >
                      {
                        "Whether you\u2019re looking to soften crow\u2019s feet, forehead lines, or frown lines, Botox offers a safe and effective solution for achieving a rejuvenated appearance."
                      }
                    </div>
                  </Stack__>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9KZd
                  )}
                >
                  {
                    "Here\u2019s how it works: Botox blocks nerve signals to specific muscles, preventing them from contracting. By targeting the neuromuscular junction, it inhibits the release of acetylcholine\u2014a neurotransmitter that triggers muscle movement. This temporary \u201cfreeze\u201d allows the skin above these muscles to appear smoother and more refreshed."
                  }
                </div>
              </div>
            </Stack__>
            <Button
              data-plasmic-name={"whatIsBotoxButton"}
              data-plasmic-override={overrides.whatIsBotoxButton}
              className={classNames("__wab_instance", sty.whatIsBotoxButton)}
            >
              {"Book Now"}
            </Button>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___9QOqV)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__xG7Va)}>
              <div className={classNames(projectcss.all, sty.freeBox___1W2Th)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___2GbSe)}
                  displayHeight={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "200px"
                      : hasVariant(globalVariants, "screen", "midsize")
                      ? "100%"
                      : "auto"
                  }
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "100%"
                      : hasVariant(globalVariants, "screen", "midsize")
                      ? "100%"
                      : "650px"
                  }
                  loading={"lazy"}
                  src={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? {
                          src: "/plasmic/image_lab_2024/images/imagePng65.png",
                          fullWidth: 686,
                          fullHeight: 400,
                          aspectRatio: undefined
                        }
                      : {
                          src: "/plasmic/image_lab_2024/images/imagePng66.png",
                          fullWidth: 1300,
                          fullHeight: 1036,
                          aspectRatio: undefined
                        }
                  }
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__gu8Ol)}
              >
                <div
                  data-plasmic-name={"supportingText3"}
                  data-plasmic-override={overrides.supportingText3}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.supportingText3
                  )}
                >
                  {"Science Behind Botox"}
                </div>
                <span
                  data-plasmic-name={"supportingText4"}
                  data-plasmic-override={overrides.supportingText4}
                  className={classNames(
                    projectcss.all,
                    projectcss.span,
                    projectcss.__wab_text,
                    sty.supportingText4
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Botox works by targeting the neuromuscular junction, where it inhibits the release of acetylcholine\u2014a neurotransmitter responsible for muscle contractions. This process temporarily \u201cfreezes\u201d the muscle, creating a smoother appearance on the skin's surface."
                    : "Botox works by targeting the neuromuscular junction, where it inhibits the release of acetylcholine\u2014a neurotransmitter responsible for muscle contractions. This process temporarily \u201cfreezes\u201d the muscle, creating a smoother appearance on the skin's surface."}
                </span>
              </Stack__>
            </div>
          </Stack__>
        </Stack__>
      </Stack__>
      <Stack__
        as={"div"}
        data-plasmic-name={"ourBotoxProcessSection"}
        data-plasmic-override={overrides.ourBotoxProcessSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.ourBotoxProcessSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__wvGqg)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___2OIGn)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__ubNkL
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FFFFFF" }}
                >
                  {"Our Botox"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#E4C08C", fontStyle: "italic" }}
                >
                  {"Process"}
                </span>
              </React.Fragment>
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___63Mxp
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "From consultation to treatment,\nwe make the process simpleand comfortable for natural, lasting results."
                : "From consultation to treatment, we make the process\n simpleand comfortable for natural, lasting results."}
            </div>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__sfxyV)}>
            <div
              data-plasmic-name={"ourBotoxProcessCircle"}
              data-plasmic-override={overrides.ourBotoxProcessCircle}
              className={classNames(projectcss.all, sty.ourBotoxProcessCircle)}
            />

            <div
              data-plasmic-name={"ourBotoxProcessCircleBg"}
              data-plasmic-override={overrides.ourBotoxProcessCircleBg}
              className={classNames(
                projectcss.all,
                sty.ourBotoxProcessCircleBg
              )}
            >
              <div
                data-plasmic-name={"ourBotoxProcessEllipse1"}
                data-plasmic-override={overrides.ourBotoxProcessEllipse1}
                className={classNames(
                  projectcss.all,
                  sty.ourBotoxProcessEllipse1
                )}
              />

              <div
                data-plasmic-name={"ourBotoxProcessEllipse2"}
                data-plasmic-override={overrides.ourBotoxProcessEllipse2}
                className={classNames(
                  projectcss.all,
                  sty.ourBotoxProcessEllipse2
                )}
              />

              <div
                data-plasmic-name={"ourBotoxProcessEllipse3"}
                data-plasmic-override={overrides.ourBotoxProcessEllipse3}
                className={classNames(
                  projectcss.all,
                  sty.ourBotoxProcessEllipse3
                )}
              />
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__f83H1)}
            >
              <div
                data-plasmic-name={"ourBotoxProcessIcons"}
                data-plasmic-override={overrides.ourBotoxProcessIcons}
                className={classNames(projectcss.all, sty.ourBotoxProcessIcons)}
              >
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___1Lawf)}
                  displayHeight={"16px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"16px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/documentSvg.svg",
                    fullWidth: 17,
                    fullHeight: 17,
                    aspectRatio: 1
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___2Mp5)}
                  displayHeight={"16px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"16px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/injectionSvg3.svg",
                    fullWidth: 17,
                    fullHeight: 17,
                    aspectRatio: 1
                  }}
                />

                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__jhzDk)}
                  displayHeight={"16px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"16px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/checkSvg4.svg",
                    fullWidth: 17,
                    fullHeight: 17,
                    aspectRatio: 1
                  }}
                />
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__wjfNi)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__or5Lo
                  )}
                >
                  {"Step "}
                </div>
                <div
                  data-plasmic-name={"ourBotoxProcessNumber"}
                  data-plasmic-override={overrides.ourBotoxProcessNumber}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.ourBotoxProcessNumber
                  )}
                >
                  {"1"}
                </div>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"ourBotoxProcessContent"}
              data-plasmic-override={overrides.ourBotoxProcessContent}
              hasGap={true}
              className={classNames(projectcss.all, sty.ourBotoxProcessContent)}
            >
              <BotoxProcessCard
                className={classNames(
                  "__wab_instance",
                  sty.botoxProcessCard___1RJzs
                )}
                description={
                  "Begin with a personalized consultation where our experts assess your skin and discuss your goals. We\u2019ll create a tailored treatment plan to ensure optimal results that align with your needs."
                }
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__r7ScN)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "48px"
                        : "100%"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "48px"
                        : "100%"
                    }
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/iconSvg7.svg",
                      fullWidth: 73,
                      fullHeight: 72,
                      aspectRatio: 1.013889
                    }}
                  />
                }
                title={"\u00a0Consultation"}
              />

              <BotoxProcessCard
                className={classNames(
                  "__wab_instance",
                  sty.botoxProcessCard__yVyJm
                )}
                description={
                  "During your Botox session, a skilled practitioner will administer precise injections to targeted areas.The procedure is quick, minimally invasive, and designed for your comfort."
                }
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__kFeTq)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/iconSvg8.svg",
                      fullWidth: 73,
                      fullHeight: 72,
                      aspectRatio: 1.013889
                    }}
                  />
                }
                title={"Treatment"}
              />

              <BotoxProcessCard
                className={classNames(
                  "__wab_instance",
                  sty.botoxProcessCard__kRbN
                )}
                description={
                  "Enjoy smoother, younger-looking skin as the Botox begins to work over the next few days. With minimal downtime, you\u2019ll look refreshed and confident in no time."
                }
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__p6Fxk)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/iconSvg9.svg",
                      fullWidth: 73,
                      fullHeight: 72,
                      aspectRatio: 1.013889
                    }}
                  />
                }
                title={"Results"}
              />
            </Stack__>
            <Button
              data-plasmic-name={"ourBotoxProcessButton"}
              data-plasmic-override={overrides.ourBotoxProcessButton}
              className={classNames(
                "__wab_instance",
                sty.ourBotoxProcessButton
              )}
              color={"white"}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hxUfC
                )}
              >
                {"Book Now"}
              </div>
            </Button>
          </div>
        </Stack__>
      </Stack__>
      <Stack__
        as={"section"}
        data-plasmic-name={"affordableBotoxSection"}
        data-plasmic-override={overrides.affordableBotoxSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.affordableBotoxSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___1JzFp)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__fLnGd
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Affordable"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Botox Treatments"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0C7A7B", fontStyle: "italic" }}
                >
                  {"Tailored to You"}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Affordable Botox Treatments"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0C7A7B", fontStyle: "italic" }}
                >
                  {"Tailored to You"}
                </span>
              </React.Fragment>
            )}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__tfw7
            )}
          >
            <React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{ color: "#535556" }}
              >
                {
                  "Affordable, transparent Botox pricing tailored to your goals and budget."
                }
              </span>
            </React.Fragment>
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__hib93)}
        >
          <AffordableBotoxCard
            className={classNames(
              "__wab_instance",
              sty.affordableBotoxCard__v1OXt
            )}
            items={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? [
                    {
                      title: "Versatile Treatment",
                      description:
                        "Botox targets facial muscles to address a variety of cosmetic concerns."
                    },
                    {
                      title: "Wrinkle Reduction",
                      description:
                        "Effectively minimizes fine lines and wrinkles for a smoother appearance."
                    },
                    {
                      title: "Natural Results",
                      description:
                        "Delivers a refreshed, rejuvenated look while preserving natural expressions."
                    }
                  ]
                : [
                    {
                      title: "Versatile Treatment",
                      description:
                        "Botox targets facial muscles to address a variety of cosmetic concerns."
                    },
                    {
                      title: "Wrinkle Reduction",
                      description:
                        "Effectively minimizes fine lines and wrinkles for a smoother appearance."
                    },
                    {
                      title: "Natural Results",
                      description:
                        "Delivers a refreshed, rejuvenated look while preserving natural expressions."
                    }
                  ]
            }
          />

          <AffordableBotoxCard
            className={classNames(
              "__wab_instance",
              sty.affordableBotoxCard___844NL
            )}
            items={[
              {
                title: "Targeted for Larger Areas",
                description:
                  "Dysport\u2019s unique diffusion pattern effectively addresses broader treatment zones."
              },
              {
                title: "Dynamic Wrinkle Reduction",
                description:
                  "Designed to minimize the appearance of dynamic wrinkles across the face."
              },
              {
                title: "Rapid Action",
                description:
                  "Spreads quickly to cover a wider surface for efficient, natural-looking results."
              }
            ]}
            name={"Dysport"}
          />

          <AffordableBotoxCard
            className={classNames(
              "__wab_instance",
              sty.affordableBotoxCard__rVlvw
            )}
            items={[
              {
                title: "Smooths Facial Lines",
                description:
                  "eomin effectively reduces facial lines and creases, similar to Botox."
              },
              {
                title: "Protein-Free Formula",
                description:
                  "s a 'naked' injectable, Xeomin contains no added proteins, offering a purer solution."
              },
              {
                title: "Lower Resistance Risk",
                description:
                  "Its simplified composition may reduce the likelihood of resistance developing over time."
              }
            ]}
            name={"Xeomin"}
            perUnit={"$13.00"}
            price={"$10.50"}
          />
        </Stack__>
        <Button
          data-plasmic-name={"affordableBotoxButton"}
          data-plasmic-override={overrides.affordableBotoxButton}
          className={classNames("__wab_instance", sty.affordableBotoxButton)}
        >
          {"Book Now"}
        </Button>
      </Stack__>
      {(hasVariant(globalVariants, "screen", "mobileOnly") ? false : false) ? (
        <FaceSection
          data-plasmic-name={"faceSection"}
          data-plasmic-override={overrides.faceSection}
          className={classNames("__wab_instance", sty.faceSection)}
          items={
            hasVariant(globalVariants, "screen", "mobileOnly")
              ? [
                  {
                    name: "Forehead",
                    nameDescription: "",
                    content:
                      "Reduces horizontal lines across\nthe forehead for a smoother look.",
                    face_dot: { left: "53.23%", top: "11.67%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Crow\u2019s Feet",
                    nameDescription: "",
                    content:
                      "Smooths the fine lines that form\naround the outer corners of the eyes.",
                    face_dot: { left: "29.85%", top: "38.94%" },
                    range: "$50 - $150",
                    units: "5-15 units"
                  },
                  {
                    name: "Hooded Eyes",
                    nameDescription: "",
                    content:
                      "Lifts and opens up the appearance\nof drooping eyelids.",
                    face_dot: { left: "34.46%", top: "31.52%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Jawline",
                    nameDescription: "",
                    content:
                      "Helps contour and refine the jawline\nfor a more sculpted appearance.",
                    face_dot: { left: "37.85%", top: "66.67%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Under Eye Wrinkles",
                    nameDescription: "",
                    content:
                      "Minimizes fine lines and wrinkles beneath\nthe eyes.",
                    face_dot: { left: "44.62%", top: "41.36%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Turkey Neck",
                    nameDescription: "",
                    content:
                      "Tightens and smooths sagging skin\nalong the neck area.",
                    face_dot: { left: "55.85%", top: "88.03%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Bruxism",
                    nameDescription: "",
                    content:
                      "Eases teeth grinding by relaxing\nthe jaw muscles.",
                    face_dot: { left: "66.92%", top: "78.33%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Frown Lines",
                    nameDescription: "",
                    content:
                      "Softens vertical lines between the brows,\noften referred to as '11 lines.",
                    face_dot: { left: "54.15%", top: "25.30%" },
                    range: "$200 - $300",
                    units: "20-30 units"
                  },
                  {
                    name: "Jaw Clenching",
                    nameDescription: "",
                    content:
                      "Reduces the strain on jaw muscles,\nalleviating tension and pain.",
                    face_dot: { left: "62.62%", top: "56.97%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "TMJ",
                    nameDescription: "(Temporomandibular Joint Disorders)",
                    content:
                      "(Temporomandibular Joint Disorders)\nRelieves tension and discomfort caused\nby jaw clenching and grinding.",
                    face_dot: { left: "69.54%", top: "65.00%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Jowls",
                    nameDescription: "",
                    content:
                      "Lifts and tightens sagging skin along\nthe jawline for a more defined look.",
                    face_dot: { left: "70.31%", top: "56.97%" },
                    range: "$50 - $100",
                    units: "5-10 units"
                  },
                  {
                    name: "Headaches",
                    nameDescription: "",
                    content:
                      "Provides relief from chronic migraines\nand tension headaches.",
                    face_dot: { left: "77.54%", top: "21.06%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Smile Lines",
                    nameDescription: "",
                    content:
                      "Softens the creases that form around\nthe mouth when smiling.",
                    face_dot: { left: "36.92%", top: "56.97%" },
                    range: "$50 - $100",
                    units: "5-10 units"
                  },
                  {
                    name: "Gummy Smile",
                    nameDescription: "",
                    content:
                      "Minimizes the appearance of excessive\ngum tissue when smiling.",
                    face_dot: { left: "62.62%", top: "71.67%" },
                    range: "$100",
                    units: "Varies"
                  },
                  {
                    name: "Double Chin",
                    nameDescription: "",
                    content:
                      "Slims the neck area by relaxing muscles\ncontributing to a fuller chin.",
                    face_dot: { left: "54.15%", top: "79.85%" },
                    range: "$40 - $100",
                    units: "4-10 units"
                  },
                  {
                    name: "Under Eye Bags",
                    nameDescription: "",
                    content:
                      "Smooths the appearance of puffiness\nand fine lines under the eyes.",
                    face_dot: { left: "68.62%", top: "41.52%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Hyperhidrosis",
                    nameDescription: "",
                    content:
                      "Effectively reduces excessive sweating,\nparticularly in the underarms, hands, or feet.",
                    face_dot: { left: "79.23%", top: "91.82%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Sweating",
                    nameDescription: "",
                    content:
                      "Controls overactive sweat glands\nin targeted areas.",
                    face_dot: { left: "89.23%", top: "91.82%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  }
                ]
              : hasVariant(globalVariants, "screen", "midsize")
              ? [
                  {
                    name: "Forehead",
                    nameDescription: "",
                    content:
                      "Reduces horizontal lines across\nthe forehead for a smoother look.",
                    face_dot: { left: "53.23%", top: "11.67%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Crow\u2019s Feet",
                    nameDescription: "",
                    content:
                      "Smooths the fine lines that form\naround the outer corners of the eyes.",
                    face_dot: { left: "29.85%", top: "38.94%" },
                    range: "$50 - $150",
                    units: "5-15 units"
                  },
                  {
                    name: "Hooded Eyes",
                    nameDescription: "",
                    content:
                      "Lifts and opens up the appearance\nof drooping eyelids.",
                    face_dot: { left: "34.46%", top: "31.52%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Jawline",
                    nameDescription: "",
                    content:
                      "Helps contour and refine the jawline\nfor a more sculpted appearance.",
                    face_dot: { left: "37.85%", top: "66.67%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Under Eye Wrinkles",
                    nameDescription: "",
                    content:
                      "Minimizes fine lines and wrinkles beneath\nthe eyes.",
                    face_dot: { left: "44.62%", top: "41.36%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Turkey Neck",
                    nameDescription: "",
                    content:
                      "Tightens and smooths sagging skin\nalong the neck area.",
                    face_dot: { left: "55.85%", top: "88.03%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Bruxism",
                    nameDescription: "",
                    content:
                      "Eases teeth grinding by relaxing\nthe jaw muscles.",
                    face_dot: { left: "66.92%", top: "78.33%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Frown Lines",
                    nameDescription: "",
                    content:
                      "Softens vertical lines between the brows,\noften referred to as '11 lines.",
                    face_dot: { left: "54.15%", top: "25.30%" },
                    range: "$200 - $300",
                    units: "20-30 units"
                  },
                  {
                    name: "Jaw Clenching",
                    nameDescription: "",
                    content:
                      "Reduces the strain on jaw muscles,\nalleviating tension and pain.",
                    face_dot: { left: "62.62%", top: "56.97%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "TMJ",
                    nameDescription: "(Temporomandibular Joint Disorders)",
                    content:
                      "(Temporomandibular Joint Disorders)\nRelieves tension and discomfort caused\nby jaw clenching and grinding.",
                    face_dot: { left: "69.54%", top: "65.00%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Jowls",
                    nameDescription: "",
                    content:
                      "Lifts and tightens sagging skin along\nthe jawline for a more defined look.",
                    face_dot: { left: "70.31%", top: "56.97%" },
                    range: "$50 - $100",
                    units: "5-10 units"
                  },
                  {
                    name: "Headaches",
                    nameDescription: "",
                    content:
                      "Provides relief from chronic migraines\nand tension headaches.",
                    face_dot: { left: "77.54%", top: "21.06%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Smile Lines",
                    nameDescription: "",
                    content:
                      "Softens the creases that form around\nthe mouth when smiling.",
                    face_dot: { left: "36.92%", top: "56.97%" },
                    range: "$50 - $100",
                    units: "5-10 units"
                  },
                  {
                    name: "Gummy Smile",
                    nameDescription: "",
                    content:
                      "Minimizes the appearance of excessive\ngum tissue when smiling.",
                    face_dot: { left: "62.62%", top: "71.67%" },
                    range: "$100",
                    units: "Varies"
                  },
                  {
                    name: "Double Chin",
                    nameDescription: "",
                    content:
                      "Slims the neck area by relaxing muscles\ncontributing to a fuller chin.",
                    face_dot: { left: "54.15%", top: "79.85%" },
                    range: "$40 - $100",
                    units: "4-10 units"
                  },
                  {
                    name: "Under Eye Bags",
                    nameDescription: "",
                    content:
                      "Smooths the appearance of puffiness\nand fine lines under the eyes.",
                    face_dot: { left: "68.62%", top: "41.52%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Hyperhidrosis",
                    nameDescription: "",
                    content:
                      "Effectively reduces excessive sweating,\nparticularly in the underarms, hands, or feet.",
                    face_dot: { left: "79.23%", top: "91.82%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Sweating",
                    nameDescription: "",
                    content:
                      "Controls overactive sweat glands\nin targeted areas.",
                    face_dot: { left: "89.23%", top: "91.82%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  }
                ]
              : [
                  {
                    name: "Forehead",
                    nameDescription: "",
                    content:
                      "Reduces horizontal lines across\nthe forehead for a smoother look.",
                    face_dot: { left: "53.23%", top: "11.67%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Crow\u2019s Feet",
                    nameDescription: "",
                    content:
                      "Smooths the fine lines that form\naround the outer corners of the eyes.",
                    face_dot: { left: "29.85%", top: "38.94%" },
                    range: "$50 - $150",
                    units: "5-15 units"
                  },
                  {
                    name: "Hooded Eyes",
                    nameDescription: "",
                    content:
                      "Lifts and opens up the appearance\nof drooping eyelids.",
                    face_dot: { left: "34.46%", top: "31.52%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Jawline",
                    nameDescription: "",
                    content:
                      "Helps contour and refine the jawline\nfor a more sculpted appearance.",
                    face_dot: { left: "37.85%", top: "66.67%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Under Eye Wrinkles",
                    nameDescription: "",
                    content:
                      "Minimizes fine lines and wrinkles beneath\nthe eyes.",
                    face_dot: { left: "44.62%", top: "41.36%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Turkey Neck",
                    nameDescription: "",
                    content:
                      "Tightens and smooths sagging skin\nalong the neck area.",
                    face_dot: { left: "55.85%", top: "88.03%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Bruxism",
                    nameDescription: "",
                    content:
                      "Eases teeth grinding by relaxing\nthe jaw muscles.",
                    face_dot: { left: "66.92%", top: "78.33%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Frown Lines",
                    nameDescription: "",
                    content:
                      "Softens vertical lines between the brows,\noften referred to as '11 lines.",
                    face_dot: { left: "54.15%", top: "25.30%" },
                    range: "$200 - $300",
                    units: "20-30 units"
                  },
                  {
                    name: "Jaw Clenching",
                    nameDescription: "",
                    content:
                      "Reduces the strain on jaw muscles,\nalleviating tension and pain.",
                    face_dot: { left: "62.62%", top: "56.97%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "TMJ",
                    nameDescription: "(Temporomandibular Joint Disorders)",
                    content:
                      "(Temporomandibular Joint Disorders)\nRelieves tension and discomfort caused\nby jaw clenching and grinding.",
                    face_dot: { left: "69.54%", top: "65.00%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Jowls",
                    nameDescription: "",
                    content:
                      "Lifts and tightens sagging skin along\nthe jawline for a more defined look.",
                    face_dot: { left: "70.31%", top: "56.97%" },
                    range: "$50 - $100",
                    units: "5-10 units"
                  },
                  {
                    name: "Headaches",
                    nameDescription: "",
                    content:
                      "Provides relief from chronic migraines\nand tension headaches.",
                    face_dot: { left: "77.54%", top: "21.06%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Smile Lines",
                    nameDescription: "",
                    content:
                      "Softens the creases that form around\nthe mouth when smiling.",
                    face_dot: { left: "36.92%", top: "56.97%" },
                    range: "$50 - $100",
                    units: "5-10 units"
                  },
                  {
                    name: "Gummy Smile",
                    nameDescription: "",
                    content:
                      "Minimizes the appearance of excessive\ngum tissue when smiling.",
                    face_dot: { left: "62.62%", top: "71.67%" },
                    range: "$100",
                    units: "Varies"
                  },
                  {
                    name: "Double Chin",
                    nameDescription: "",
                    content:
                      "Slims the neck area by relaxing muscles\ncontributing to a fuller chin.",
                    face_dot: { left: "54.15%", top: "79.85%" },
                    range: "$40 - $100",
                    units: "4-10 units"
                  },
                  {
                    name: "Under Eye Bags",
                    nameDescription: "",
                    content:
                      "Smooths the appearance of puffiness\nand fine lines under the eyes.",
                    face_dot: { left: "68.62%", top: "41.52%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Hyperhidrosis",
                    nameDescription: "",
                    content:
                      "Effectively reduces excessive sweating,\nparticularly in the underarms, hands, or feet.",
                    face_dot: { left: "79.23%", top: "91.82%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  },
                  {
                    name: "Sweating",
                    nameDescription: "",
                    content:
                      "Controls overactive sweat glands\nin targeted areas.",
                    face_dot: { left: "89.23%", top: "91.82%" },
                    range: "$100 - $200",
                    units: "10-20 units"
                  }
                ]
          }
        />
      ) : null}
      <AreasInteractive
        data-plasmic-name={"areasInteractive"}
        data-plasmic-override={overrides.areasInteractive}
        className={classNames("__wab_instance", sty.areasInteractive)}
        data={generateStateValueProp($state, ["areasInteractive", "data"])}
        onDataChange={async (...eventArgs) => {
          generateStateOnChangeProp($state, ["areasInteractive", "data"]).apply(
            null,
            eventArgs
          );
          if (
            eventArgs.length > 1 &&
            eventArgs[1] &&
            eventArgs[1]._plasmic_state_init_
          ) {
            return;
          }
        }}
        onSelectedChange={async (...eventArgs) => {
          generateStateOnChangeProp($state, [
            "areasInteractive",
            "selected"
          ]).apply(null, eventArgs);
          if (
            eventArgs.length > 1 &&
            eventArgs[1] &&
            eventArgs[1]._plasmic_state_init_
          ) {
            return;
          }
        }}
        selected={generateStateValueProp($state, [
          "areasInteractive",
          "selected"
        ])}
      />

      <Stack__
        as={"section"}
        data-plasmic-name={"botoxResultsSection"}
        data-plasmic-override={overrides.botoxResultsSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.botoxResultsSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__vWr9C)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__oZwOt)}
          >
            <BotoxResultCard
              data-plasmic-name={"resultCard"}
              data-plasmic-override={overrides.resultCard}
              className={classNames("__wab_instance", sty.resultCard)}
              data={(() => {
                try {
                  return $state.botoxResultsList.find(
                    item => item.title === $state.botoxResultArea
                  );
                } catch (e) {
                  if (
                    e instanceof TypeError ||
                    e?.plasmicType === "PlasmicUndefinedDataError"
                  ) {
                    return undefined;
                  }
                  throw e;
                }
              })()}
            />
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___9Yv7W)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__veN5E)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vMCv2
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"How Long Do Botox "}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#0C7A7B", fontStyle: "italic" }}
                  >
                    {"Results Last?"}
                  </span>
                </React.Fragment>
              </div>
              <TextToggler
                className={classNames(
                  "__wab_instance",
                  sty.textToggler___5LRfG
                )}
                height={"120px"}
                text={
                  "On average, Botox results last between 3 to 4 months. The duration varies based on factors like the treatment area, your metabolism, and how expressive your facial muscles are. For first-time users, results may fade slightly faster, while those with consistent Botox treatments may find their results lasting longer over time."
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__njIi3
                )}
              >
                {
                  "On average, Botox results last between 3 to 4 months. The duration varies based on factors like the treatment area, your metabolism, and how expressive your facial muscles are. For first-time users, results may fade slightly faster, while those with consistent Botox treatments may find their results lasting longer over time."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dKsGm)}
            >
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.botoxResultsList;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const currentItem = __plasmic_item_0;
                const currentIndex = __plasmic_idx_0;
                return (
                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateBotoxResultArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["botoxResultArea"]
                              },
                              operation: 0,
                              value: currentItem.title
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateBotoxResultArea"] != null &&
                        typeof $steps["updateBotoxResultArea"] === "object" &&
                        typeof $steps["updateBotoxResultArea"].then ===
                          "function"
                      ) {
                        $steps["updateBotoxResultArea"] = await $steps[
                          "updateBotoxResultArea"
                        ];
                      }
                    }}
                    key={currentIndex}
                    selected={(() => {
                      try {
                        return currentItem.title === $state.botoxResultArea;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()}
                    value={(() => {
                      try {
                        return currentItem.title;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                );
              })}
            </Stack__>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? true
                : hasVariant(globalVariants, "screen", "midsize")
                ? true
                : false
            ) ? (
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fsHi)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xomq3)}
                >
                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateBotoxResultArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["botoxResultArea"]
                              },
                              operation: 0,
                              value: "Metabolism"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateBotoxResultArea"] != null &&
                        typeof $steps["updateBotoxResultArea"] === "object" &&
                        typeof $steps["updateBotoxResultArea"].then ===
                          "function"
                      ) {
                        $steps["updateBotoxResultArea"] = await $steps[
                          "updateBotoxResultArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return "Metabolism" === $state.botoxResultArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return "Metabolism" === $state.botoxResultArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Metabolism"
                        : "Metabolism"
                    }
                  />

                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateBotoxResultArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["botoxResultArea"]
                              },
                              operation: 0,
                              value: "Treatment Area"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateBotoxResultArea"] != null &&
                        typeof $steps["updateBotoxResultArea"] === "object" &&
                        typeof $steps["updateBotoxResultArea"].then ===
                          "function"
                      ) {
                        $steps["updateBotoxResultArea"] = await $steps[
                          "updateBotoxResultArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return (
                                "Treatment Area" === $state.botoxResultArea
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return (
                                "Treatment Area" === $state.botoxResultArea
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Treatment Area"
                        : "Treatment Area"
                    }
                  />
                </Stack__>
                <SelectPill
                  className={classNames("__wab_instance")}
                  handleClick={async () => {
                    const $steps = {};
                    $steps["updateBotoxResultArea"] = true
                      ? (() => {
                          const actionArgs = {
                            variable: {
                              objRoot: $state,
                              variablePath: ["botoxResultArea"]
                            },
                            operation: 0,
                            value: "Aftercare and Lifestyle"
                          };
                          return (({
                            variable,
                            value,
                            startIndex,
                            deleteCount
                          }) => {
                            if (!variable) {
                              return;
                            }
                            const { objRoot, variablePath } = variable;
                            $stateSet(objRoot, variablePath, value);
                            return value;
                          })?.apply(null, [actionArgs]);
                        })()
                      : undefined;
                    if (
                      $steps["updateBotoxResultArea"] != null &&
                      typeof $steps["updateBotoxResultArea"] === "object" &&
                      typeof $steps["updateBotoxResultArea"].then === "function"
                    ) {
                      $steps["updateBotoxResultArea"] = await $steps[
                        "updateBotoxResultArea"
                      ];
                    }
                  }}
                  selected={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? (() => {
                          try {
                            return (
                              "Aftercare and Lifestyle" ===
                              $state.botoxResultArea
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      : (() => {
                          try {
                            return (
                              "Aftercare and Lifestyle" ===
                              $state.botoxResultArea
                            );
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                  }
                  value={
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Aftercare and Lifestyle"
                      : "Aftercare and Lifestyle"
                  }
                />
              </Stack__>
            ) : null}
          </Stack__>
        </Stack__>
      </Stack__>
      <Stack__
        as={"section"}
        data-plasmic-name={"ctaSection"}
        data-plasmic-override={overrides.ctaSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.ctaSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__dlFxX)}
        >
          <div
            data-plasmic-name={"heading9"}
            data-plasmic-override={overrides.heading9}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.heading9
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FFFFFF" }}
                >
                  {"Want to know how long your "}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#E4C08C" }}
                >
                  {"Botox results"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FFFFFF" }}
                >
                  {"might last?"}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FFFFFF" }}
                >
                  {"Want to learn more about if "}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#E4C08C" }}
                >
                  {"Botox is right"}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FFFFFF" }}
                >
                  {" for you?"}
                </span>
              </React.Fragment>
            )}
          </div>
          <div
            data-plasmic-name={"supportingText8"}
            data-plasmic-override={overrides.supportingText8}
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.supportingText8
            )}
          >
            {
              "Schedule a Consultation with Our Team to discuss a treatment \nplan tailored to you."
            }
          </div>
        </Stack__>
        <Button
          data-plasmic-name={"ctaButton"}
          data-plasmic-override={overrides.ctaButton}
          className={classNames("__wab_instance", sty.ctaButton)}
          color={"white"}
        >
          {"Book Now"}
        </Button>
      </Stack__>
      <Stack__
        as={"section"}
        data-plasmic-name={"isBotoxSafeSection"}
        data-plasmic-override={overrides.isBotoxSafeSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.isBotoxSafeSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__v99Kn)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__qZkcd)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__eg07R)}
            >
              <div
                data-plasmic-name={"heading10"}
                data-plasmic-override={overrides.heading10}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading10
                )}
              >
                <React.Fragment>
                  <React.Fragment>{"Is Botox "}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#D19D51" }}
                  >
                    {"Safe?"}
                  </span>
                </React.Fragment>
              </div>
              <div
                data-plasmic-name={"supportingText9"}
                data-plasmic-override={overrides.supportingText9}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.supportingText9
                )}
              >
                {"Addressing Common Concerns"}
              </div>
            </Stack__>
            <div
              data-plasmic-name={"supportingText10"}
              data-plasmic-override={overrides.supportingText10}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.supportingText10
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Botox is a safe, non-invasive treatment that smooths wrinkles and prevents signs of aging, delivering natural, long-lasting results. Tailored to your unique facial structure, it offers a refreshed, youthful look with minimal downtime, enhancing your beauty and boosting your confidence."
                : "Botox is a safe, non-invasive treatment that smooths wrinkles and prevents signs of aging, delivering natural, long-lasting results. Tailored to your unique facial structure, it offers a refreshed, youthful look with minimal downtime, enhancing your beauty and boosting your confidence."}
            </div>
          </Stack__>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__jTuEx)}
            displayHeight={"auto"}
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={"auto"}
            loading={"lazy"}
            src={{
              src: "/plasmic/image_lab_2024/images/imagePng8.png",
              fullWidth: 686,
              fullHeight: 400,
              aspectRatio: undefined
            }}
          />

          <div className={classNames(projectcss.all, sty.freeBox___5F1Wc)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__aViR)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__gqoDa
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {"Possible Side Effects: "}
                  </span>
                  <React.Fragment>
                    {
                      "Common side effects include minor bruising, swelling at the injection site, and, in rare cases, headaches or mild flu-like symptoms. These typically fade within a few days. More serious side effects, such as drooping eyelids, are rare and often related to improper technique, underscoring the importance of choosing a qualified provider."
                    }
                  </React.Fragment>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {"Possible Side Effects:"}
                  </span>
                  <React.Fragment>
                    {
                      " Common side effects include minor bruising, swelling at the injection site, and, in rare cases, headaches or mild flu-like symptoms. These typically fade within a few days. More serious side effects, such as drooping eyelids, are rare and often related to improper technique, underscoring the importance of choosing a qualified provider."
                    }
                  </React.Fragment>
                </React.Fragment>
              )}
            </div>
          </div>
        </Stack__>
        <div className={classNames(projectcss.all, sty.freeBox__f9Sk3)}>
          <div className={classNames(projectcss.all, sty.freeBox__xP5Dv)} />
        </div>
      </Stack__>
      <section
        data-plasmic-name={"isBotoxRightSection"}
        data-plasmic-override={overrides.isBotoxRightSection}
        className={classNames(projectcss.all, sty.isBotoxRightSection)}
      >
        <Stack__
          as={"div"}
          data-plasmic-name={"isBotoxRightHeader"}
          data-plasmic-override={overrides.isBotoxRightHeader}
          hasGap={true}
          className={classNames(projectcss.all, sty.isBotoxRightHeader)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__nDUsm
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Is Botox Right"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0C7A7B", fontStyle: "italic" }}
                >
                  {"for You?"}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Is Botox Right"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#0C7A7B", fontStyle: "italic" }}
                >
                  {"for You?"}
                </span>
              </React.Fragment>
            )}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__cBFwh
            )}
          >
            {
              "Before opting for Botox, it\u2019s essential to understand what the treatment can and cannot do. Here are some factors to help you determine if Botox aligns with your goals:"
            }
          </div>
        </Stack__>
        <div className={classNames(projectcss.all, sty.freeBox__hQm49)}>
          <Stack__
            as={"div"}
            data-plasmic-name={"isBotoxRightContent"}
            data-plasmic-override={overrides.isBotoxRightContent}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.isBotoxRightContent,
              "hide-scrollbar"
            )}
          >
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard__c2E3P
              )}
              icon={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___3BDtp)}
                  displayHeight={"24px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"24px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/starsSvg3.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              image={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__c53Xu)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng32.png",
                    fullWidth: 758,
                    fullHeight: 513,
                    aspectRatio: undefined
                  }}
                />
              }
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2CzsT
                  )}
                >
                  {"Targeted Wrinkle Type"}
                </div>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___7AIje
                )}
              >
                {
                  "Botox is most effective on dynamic wrinkles caused by repetitive facial movements, like frown lines, forehead creases, and crow\u2019s feet. If your primary concerns are fine lines and wrinkles that form with movement, Botox may be an ideal choice."
                }
              </div>
            </HowItWorksCard>
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard__iXhG6
              )}
              icon={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__bfzB6)}
                  displayHeight={"24px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"24px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/timeSvg2.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              image={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___6PGvz)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng33.png",
                    fullWidth: 758,
                    fullHeight: 513,
                    aspectRatio: undefined
                  }}
                />
              }
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___87NBt
                  )}
                >
                  {"Preventative Goals"}
                </div>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cmtrk
                )}
              >
                {
                  "Botox is popular among younger clients as a preventative measure. Starting in your 20s or 30s can help delay the formation of deeper wrinkles, preserving a youthful look over time."
                }
              </div>
            </HowItWorksCard>
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard__awWuZ
              )}
              icon={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__fkiTa)}
                  displayHeight={"24px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"24px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/face2Svg2.svg",
                    fullWidth: 24,
                    fullHeight: 25,
                    aspectRatio: 0.96
                  }}
                />
              }
              image={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__x1Bii)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng34.png",
                    fullWidth: 776,
                    fullHeight: 513,
                    aspectRatio: undefined
                  }}
                />
              }
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__skGm
                  )}
                >
                  {"Natural Expectations"}
                </div>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mTv6
                )}
              >
                {
                  "Botox provides subtle enhancements, not drastic changes. If you\u2019re seeking a natural improvement without altering your facial expressions, Botox could be a good fit."
                }
              </div>
            </HowItWorksCard>
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard__w1GiC
              )}
              icon={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__gk7NQ)}
                  displayHeight={"24px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"24px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/hairSvg.svg",
                    fullWidth: 24,
                    fullHeight: 24,
                    aspectRatio: 1
                  }}
                />
              }
              image={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__jzxW)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"100%"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng35.png",
                    fullWidth: 758,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />
              }
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mfmmH
                  )}
                >
                  {"Commitment to Maintenance"}
                </div>
              }
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ksx49
                )}
              >
                {
                  "Botox is temporary, lasting about 3-4 months. If you\u2019re open to regular follow-up treatments, Botox can be a great addition to your beauty routine."
                }
              </div>
            </HowItWorksCard>
          </Stack__>
        </div>
      </section>
      <Stack__
        as={"section"}
        data-plasmic-name={"botoxAppointmentSection"}
        data-plasmic-override={overrides.botoxAppointmentSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.botoxAppointmentSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__zor6V)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___14QN)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hhfus)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___4V7A8)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zXpNv
                  )}
                >
                  {hasVariant(globalVariants, "screen", "midsize") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Preparing for Your"}
                      </span>
                      <React.Fragment> </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#D19D51" }}
                      >
                        {"Botox Appointment"}
                      </span>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Preparing for Your"}
                      </span>
                      <React.Fragment> </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#D19D51" }}
                      >
                        {"Botox Appointment"}
                      </span>
                    </React.Fragment>
                  )}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__k235L
                  )}
                >
                  {"Here are some tips to ensure a smooth Botox experience:"}
                </div>
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___87Pse)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__eqIOp)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg__tNu1F)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__a1TXf
                      )}
                    >
                      {"Avoid Blood Thinners"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6Xz0B
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "A few days before your appointment, avoid medications and supplements that can thin your blood, such as aspirin, ibuprofen, and fish oil. This reduces the risk of bruising at the injection site."
                      : "A few days before your appointment, avoid medications and supplements that can thin your blood, such as aspirin, ibuprofen, and fish oil. This reduces the risk of bruising at the injection site."}
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__p9P7X)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"title2"}
                    data-plasmic-override={overrides.title2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title2)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg___6AfnD)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gvoCy
                      )}
                    >
                      {"Skip Alcohol and Tobacco"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___24Kjb
                    )}
                  >
                    {
                      "Both can increase bruising and affect your skin\u2019s recovery. Try to avoid alcohol for at least 24 hours before and after treatment."
                    }
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__qJgGy)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"title3"}
                    data-plasmic-override={overrides.title3}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title3)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg__xjPsH)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___4O0
                      )}
                    >
                      {"Inform Your Provider of Medical History"}
                    </div>
                  </Stack__>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__n0Hkk
                    )}
                  >
                    {
                      "Be transparent about any medical conditions, allergies, or medications you\u2019re taking. This information helps us customize your treatment and prevent potential complications."
                    }
                  </div>
                </div>
              </Stack__>
            </Stack__>
            <Button
              data-plasmic-name={"botoxAppointmentButton"}
              data-plasmic-override={overrides.botoxAppointmentButton}
              className={classNames(
                "__wab_instance",
                sty.botoxAppointmentButton
              )}
            >
              {"Book Now"}
            </Button>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__ch388)}
          >
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__m5RlW)}
              displayHeight={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "200px"
                  : hasVariant(globalVariants, "screen", "midsize")
                  ? "100%"
                  : "auto"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "100%"
                  : "auto"
              }
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng9.png",
                fullWidth: 1300,
                fullHeight: 1115,
                aspectRatio: undefined
              }}
            />

            <Button
              data-plasmic-name={"botoxAppointmentMobileButton"}
              data-plasmic-override={overrides.botoxAppointmentMobileButton}
              className={classNames(
                "__wab_instance",
                sty.botoxAppointmentMobileButton
              )}
            >
              {"Book Now"}
            </Button>
          </Stack__>
        </Stack__>
      </Stack__>
      <Stack__
        as={"section"}
        data-plasmic-name={"afterTheTreatmentSection"}
        data-plasmic-override={overrides.afterTheTreatmentSection}
        hasGap={true}
        className={classNames(projectcss.all, sty.afterTheTreatmentSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__w3Mw8)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__avtMx)}>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__pM6Cj)}
              displayHeight={
                hasVariant(globalVariants, "screen", "midsize")
                  ? "100%"
                  : "auto"
              }
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng10.png",
                fullWidth: 1300,
                fullHeight: 1423,
                aspectRatio: undefined
              }}
            />
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__fBcEx)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jyaYg)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xXnt1)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__io7Fa
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"What to Expect"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#D19D51" }}
                    >
                      {"During and After "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"the Treatment"}
                    </span>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wQcHr
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Botox injections are minimally invasive and generally quick, typically taking about 15 to 30 minutes. Most clients describe the feeling as a slight pinch, similar to a mosquito bite."
                    : "Botox injections are minimally invasive and generally quick, typically taking about 15 to 30 minutes. Most clients describe the feeling as a slight pinch, similar to a mosquito bite."}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xk3C)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___9EBfz
                  )}
                >
                  {"Post-Treatment Care:"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__pqLf)}
                >
                  <PointIcon
                    className={classNames(projectcss.all, sty.svg___4KuWw)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0Op2E
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#535556" }}
                      >
                        {
                          "Avoid lying down or bending over for 4 hours after the treatment to prevent the Botox from migrating. "
                        }
                      </span>
                    </React.Fragment>
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__j0AL)}
                >
                  <PointIcon
                    className={classNames(projectcss.all, sty.svg___5Xh4E)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gyFvG
                    )}
                  >
                    {"Refrain from intense physical activities for 24 hours."}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__n3Sx)}
                >
                  <PointIcon
                    className={classNames(projectcss.all, sty.svg__dvNar)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zuWu4
                    )}
                  >
                    {
                      "Avoid rubbing or massaging the treated area, as this may cause the Botox to spread to unintended muscles."
                    }
                  </div>
                </Stack__>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__bx3Iz
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Results will typically begin to appear within 3-5 days, with full effects visible at around two weeks. We invite you to schedule a Follow-Up Appointment to assess your results and make"
                  : hasVariant(globalVariants, "screen", "midsize")
                  ? "Results will typically begin to appear within 3-5 days, with full effects visible at around two weeks. We invite you to schedule a Follow-Up Appointment to assess your results and make"
                  : "Results will typically begin to appear within 3-5 days, with full effects visible at around two weeks. We invite you to schedule a Follow-Up Appointment to assess your results and make"}
              </div>
            </Stack__>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__hKjVf)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng11.png",
                fullWidth: 686,
                fullHeight: 400,
                aspectRatio: undefined
              }}
            />

            <Button
              data-plasmic-name={"afterTheTreatmentButton"}
              data-plasmic-override={overrides.afterTheTreatmentButton}
              className={classNames(
                "__wab_instance",
                sty.afterTheTreatmentButton
              )}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__r1Gsl
                )}
              >
                {"Book Now"}
              </div>
            </Button>
          </div>
        </Stack__>
      </Stack__>
      <section
        data-plasmic-name={"ageGroupsSection"}
        data-plasmic-override={overrides.ageGroupsSection}
        className={classNames(projectcss.all, sty.ageGroupsSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__ix2TJ)}
        >
          <div className={classNames(projectcss.all, sty.freeBox__ozSr)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vmcTj
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"Botox for Different "}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#E4C08C" }}
                  >
                    {"Age Groups: "}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"When Should You Start?"}
                  </span>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"Botox for Different "}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#E4C08C" }}
                  >
                    {"Age Groups:"}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"When Should You Start?"}
                  </span>
                </React.Fragment>
              )}
            </div>
          </div>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__e9M1)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__ib1Ff)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__roD3R
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Botox is often associated with older individuals who want to smooth out wrinkles, but it\u2019s actually a popular choice across various age groups. People in their 20s, 30s, 40s, and beyond are all potential candidates for Botox, each with different goals and considerations. This guide breaks down how Botox can be beneficial at different stages of life and helps you decide when the right time might be for you to start."
                  : "Botox is often associated with older individuals who want to smooth out wrinkles, but it\u2019s actually a popular choice across various age groups. People in their 20s, 30s, 40s, and beyond are all potential candidates for Botox, each with different goals and considerations. This guide breaks down how Botox can be beneficial at different stages of life and helps you decide when the right time might be for you to start."}
              </div>
              <TextToggler
                className={classNames("__wab_instance", sty.textToggler__fxfch)}
                height={"168px"}
                text={
                  "Botox is often associated with older individuals who want to smooth out wrinkles, but it\u2019s actually a popular choice across various age groups. People in their 20s, 30s, 40s, and beyond are all potential candidates for Botox, each with different goals and considerations. This guide breaks down how Botox can be beneficial at different stages of life and helps you decide when the right time might be for you to start."
                }
                white={true}
              />
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__erEpa)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__f3Yk
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "When\u2019s the Best Time for You to Start?"
                  : "When\u2019s the Best Time for You to Start?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hMhf1
                )}
              >
                {
                  "There\u2019s no single \u201cperfect\u201d age to start Botox. The best approach is to consider your skin\u2019s unique needs and your personal aesthetic goals. Whether you\u2019re interested in preventative Botox in your 20s or looking to smooth established wrinkles in your 50s, ImageLab Medspa offers tailored Botox treatments for every stage of life."
                }
              </div>
            </Stack__>
          </Stack__>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox___0PPaX)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__xrdu0)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cmass)}
            >
              {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                (() => {
                  try {
                    return $state.ageGroupsList;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return [];
                    }
                    throw e;
                  }
                })()
              ).map((__plasmic_item_0, __plasmic_idx_0) => {
                const currentItem = __plasmic_item_0;
                const currentIndex = __plasmic_idx_0;
                return (
                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateAgeGroupsArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["ageGroupsArea"]
                              },
                              operation: 0,
                              value: currentItem.years
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateAgeGroupsArea"] != null &&
                        typeof $steps["updateAgeGroupsArea"] === "object" &&
                        typeof $steps["updateAgeGroupsArea"].then === "function"
                      ) {
                        $steps["updateAgeGroupsArea"] = await $steps[
                          "updateAgeGroupsArea"
                        ];
                      }
                    }}
                    key={currentIndex}
                    selected={(() => {
                      try {
                        return currentItem.years === $state.ageGroupsArea;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return [];
                        }
                        throw e;
                      }
                    })()}
                    value={(() => {
                      try {
                        return currentItem.years;
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                );
              })}
            </Stack__>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
            ) ? (
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___5YIjJ)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__wtF2)}
                >
                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateAgeGroupsArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["ageGroupsArea"]
                              },
                              operation: 0,
                              value: "20 years"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateAgeGroupsArea"] != null &&
                        typeof $steps["updateAgeGroupsArea"] === "object" &&
                        typeof $steps["updateAgeGroupsArea"].then === "function"
                      ) {
                        $steps["updateAgeGroupsArea"] = await $steps[
                          "updateAgeGroupsArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return "20 years" === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return currentItem.years === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "20 years"
                        : (() => {
                            try {
                              return currentItem.years;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                    }
                  />

                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateAgeGroupsArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["ageGroupsArea"]
                              },
                              operation: 0,
                              value: "30 years"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateAgeGroupsArea"] != null &&
                        typeof $steps["updateAgeGroupsArea"] === "object" &&
                        typeof $steps["updateAgeGroupsArea"].then === "function"
                      ) {
                        $steps["updateAgeGroupsArea"] = await $steps[
                          "updateAgeGroupsArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return "30 years" === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return currentItem.years === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "30 years"
                        : (() => {
                            try {
                              return currentItem.years;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                    }
                  />
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__u8Wai)}
                >
                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateAgeGroupsArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["ageGroupsArea"]
                              },
                              operation: 0,
                              value: "40 years"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateAgeGroupsArea"] != null &&
                        typeof $steps["updateAgeGroupsArea"] === "object" &&
                        typeof $steps["updateAgeGroupsArea"].then === "function"
                      ) {
                        $steps["updateAgeGroupsArea"] = await $steps[
                          "updateAgeGroupsArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return "40 years" === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return currentItem.years === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "40 years"
                        : (() => {
                            try {
                              return currentItem.years;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                    }
                  />

                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateAgeGroupsArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["ageGroupsArea"]
                              },
                              operation: 0,
                              value: "50 years"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateAgeGroupsArea"] != null &&
                        typeof $steps["updateAgeGroupsArea"] === "object" &&
                        typeof $steps["updateAgeGroupsArea"].then === "function"
                      ) {
                        $steps["updateAgeGroupsArea"] = await $steps[
                          "updateAgeGroupsArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return "50 years" === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return currentItem.years === $state.ageGroupsArea;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "50 years"
                        : (() => {
                            try {
                              return currentItem.years;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()
                    }
                  />
                </Stack__>
              </Stack__>
            ) : null}
            <div className={classNames(projectcss.all, sty.freeBox__a1MJg)}>
              <AgeGroupsCard
                data-plasmic-name={"ageGroupsCard"}
                data-plasmic-override={overrides.ageGroupsCard}
                className={classNames("__wab_instance", sty.ageGroupsCard)}
                data={(() => {
                  try {
                    return $state.ageGroupsList.find(
                      item => item.years === $state.ageGroupsArea
                    );
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />
            </div>
          </Stack__>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"chooseBotoxSection"}
        data-plasmic-override={overrides.chooseBotoxSection}
        className={classNames(projectcss.all, sty.chooseBotoxSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__wRid5)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"chooseBotoxContent"}
            data-plasmic-override={overrides.chooseBotoxContent}
            hasGap={true}
            className={classNames(projectcss.all, sty.chooseBotoxContent)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__e0BMu)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hJsH)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__kIhA)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles___9PIox
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__r1XiP)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/checkSvg3.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__anTim)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__pEyQ)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__xrFV
                    )}
                  >
                    {"The Best Botox:\nWhy Clients Choose ImageLab Medspa"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__cwd87
                    )}
                  >
                    {
                      "Then it comes to getting Botox, clients continually choose ImageLab Medspa for our commitment to quality, safety, and exceptional results. Let\u2019s explore what sets ImageLab apart and why so many clients consider us the best Botox provider."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ahav3)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lhRrk)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg__rTdZ)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tJkT
                        )}
                      >
                        {"Expertise & Precision of Our Skilled Injectors"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__py23L)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg__dJskx)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__luB6I
                        )}
                      >
                        {"Comprehensive Consultation Process"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___3Esbt
                      )}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg__ogsZn)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__fb056
                        )}
                      >
                        {"State-of-the-Art Facility"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__wzWwe)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg__iC4Y2)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__lcyWa
                        )}
                      >
                        {"Commitment to Safety & Quality"}
                      </div>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__robUg)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg___95Zk)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__miLin
                        )}
                      >
                        {"Transparent Pricing"}
                      </div>
                    </Stack__>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___1Up3V)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng50.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__picct)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xlT3H)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng23.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hIwEa)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__r0Pko)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___1UeUd)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng22.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__iogD)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__hzVe)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles___1M1MD
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xr1CB)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/personSvg2.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__gzQdO)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__oOjQg)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__d9WRc
                    )}
                  >
                    {"Expertise and Precision \nof Our Skilled Injectors"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__o07Xi
                    )}
                  >
                    {
                      "At ImageLab Medspa, Botox treatments are administered by experienced, licensed injectors who specialize in creating natural, balanced results. Our injectors have extensive training in facial anatomy and advanced Botox techniques, ensuring that every treatment is both safe and precisely tailored to your unique features."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iHjJu)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0VM6Q
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title4"}
                        data-plasmic-override={overrides.title4}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title4)}
                      >
                        <PointIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___2X0Mw
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___2Okcp
                          )}
                        >
                          {"Personalized Approach"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dzOei
                        )}
                      >
                        {
                          "Our injectors take the time to understand your goals, whether you're looking for a subtle refresh or a more dramatic improvement."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ureG)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title5"}
                        data-plasmic-override={overrides.title5}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title5)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__up93)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ccArp
                          )}
                        >
                          {"Natural Results"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__stPld
                        )}
                      >
                        {
                          "We prioritize a natural look, using precise doses to soften lines without over-freezing your facial expressions."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__vqFe)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title6"}
                        data-plasmic-override={overrides.title6}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title6)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__i9Up4)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w3OLj
                          )}
                        >
                          {"Experienced Team"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tAk5G
                        )}
                      >
                        {
                          "With ears of experience in cosmetic injectables, our team has a deep understanding of how to customize Botox for each client's needs."
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___1AMuM)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng51.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mZfUg)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3NqYh)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__jIzNd)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles__m64B0
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__rF5Z9)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/supportSvg2.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ngz4Y)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__wE2Kw)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__qz09E
                    )}
                  >
                    {"Comprehensive Consultation Process"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__q3FCc
                    )}
                  >
                    {
                      "We believe that a successful Botox experience starts with a thorough consultation. During your initial appointment, we take the time to assess your skin, discuss your  aesthetic goals, and explain the Botox process in detail. This personalized approach helps us create a treatment plan tailored to your needs."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__eLoh)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__eh4)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title7"}
                        data-plasmic-override={overrides.title7}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title7)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__wfN3C)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__m1EEj
                          )}
                        >
                          {"Detailed Assessment"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__w0Yca
                        )}
                      >
                        {
                          "We analyze your skin type, facial structure, and specific concerns to ensure Botox is the right solution."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wPwI)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title8"}
                        data-plasmic-override={overrides.title8}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title8)}
                      >
                        <PointIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___64PsE
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oQnRh
                          )}
                        >
                          {"Goal-Setting"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jQBz
                        )}
                      >
                        {
                          "Our team works with you to establish realistic goals and answer any questions, so you feel confident and informed."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__q4VvS)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title9"}
                        data-plasmic-override={overrides.title9}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title9)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__aDJ)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__xIpIc
                          )}
                        >
                          {"Transparent Communication"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1AjfO
                        )}
                      >
                        {
                          "We explain all aspects of the procedure, from the expected results to post-care and maintenance."
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___6XZjk)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng52.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox___3Hvp)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__vcU9C)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng24.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bCLm)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__leFO)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___9ECsX)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng25.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___5Frry)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__klEdu)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles__i1YCh
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___4K3C)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/heartSvg2.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u0Yy7)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__kKux6)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__q1R2M
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "State-of-the-Art Facility and Comfort-Focused Experience"
                      : "State-of-the-Art Facility and \nComfort-Focused Experience"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__rnpOp
                    )}
                  >
                    {
                      "Our medspa is designed to provide a relaxing  and luxurious experience from the moment you walk in.  We use advanced tools and techniques to deliver the highest level of care in a clean, modern, and comfortable environment."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__kpxuf)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o2Pjh)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title10"}
                        data-plasmic-override={overrides.title10}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title10)}
                      >
                        <PointIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___2WIvr
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8GUcD
                          )}
                        >
                          {"Advanced Technology"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vTiuS
                        )}
                      >
                        {
                          "Our facility is equipped with cutting-edge tools that enhance the Botox experience, ensuring precise and effective treatments."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jItH)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title11"}
                        data-plasmic-override={overrides.title11}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title11)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg___3Pvq)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7Mdl5
                          )}
                        >
                          {"Client-Centered Atmosphere"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__j1E
                        )}
                      >
                        {
                          "We prioritize comfort and confidentiality, creating an environment where clients feel at ease."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rjP)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title12"}
                        data-plasmic-override={overrides.title12}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title12)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__uC9P)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qFb5D
                          )}
                        >
                          {"Safety Standards"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qAvOs
                        )}
                      >
                        {
                          "We adhere to the highest safety protocols to ensure a safe experience with every visit."
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__ce8G2)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng53.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dmHEz)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fDgr)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sJkne)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles__bg1Iy
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___5DEpV)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/injectionSvg2.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sv1YE)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__qhop)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__cpc6J
                    )}
                  >
                    {"Commitment to Safety and Quality"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__sXbtT
                    )}
                  >
                    {
                      "Safety is a top priority at ImageLab Medspa. Our injectors follow strict safety protocols, and we only use FDA-approved Botox from trusted manufacturers. With our commitment to the highest standards, you can rest assured that you're in safe, professional hands."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iMddq)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8OpXg
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title13"}
                        data-plasmic-override={overrides.title13}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title13)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__yjne)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__l8MD
                          )}
                        >
                          {"Certified Providers"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dupvE
                        )}
                      >
                        {
                          "Our team is fully certified in Botox administration, ensuring that each injector has the skills and knowledge required to deliver safe and effective treatments."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tJIx5)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title14"}
                        data-plasmic-override={overrides.title14}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title14)}
                      >
                        <PointIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___13KZj
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__mk1P1
                          )}
                        >
                          {"FDA-Approved Product"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bD1Bu
                        )}
                      >
                        {
                          "We use authentic, FDA-approved Botox to provide you with the best and safest results."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__inBq5)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title15"}
                        data-plasmic-override={overrides.title15}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title15)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__sEKxC)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vd8D
                          )}
                        >
                          {"Stringent Protocols"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z7MHg
                        )}
                      >
                        {
                          "From sterilization to injection techniques, we follow rigorous protocols to ensure your safety and satisfaction."
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__o3AVr)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng54.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__xZTl8)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yol8E)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng28.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5Sukx)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__fgr7O)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__xrdG3)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng27.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jt0X7)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__u2Uba)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles___8K3Kn
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__y0I7G)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/priceSvg2.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ne6Kp)}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__xmrn2)}>
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__sYtdq
                    )}
                  >
                    {"Transparent Pricing"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p___4Bqj2
                    )}
                  >
                    {
                      "At ImageLab Medspa, we believe in clear, upfront pricing for all of our services. Our clients appreciate knowing exactly what to expect in terms of cost, with no hidden  fees. Plus, we offer a membership program to reward our clients for their continued trust in us."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pfsGx)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__c0Hq)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title16"}
                        data-plasmic-override={overrides.title16}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title16)}
                      >
                        <PointIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___7YosM
                          )}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7AnRb
                          )}
                        >
                          {"Transparent Pricing"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7GyWf
                        )}
                      >
                        {
                          "Our Botox pricing is straightforward, and we're happy to provide an estimate during your consultation."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qjRs9)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title17"}
                        data-plasmic-override={overrides.title17}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title17)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__c7Di)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__f27Zh
                          )}
                        >
                          {"Exclusive Discounts"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__b7PJv
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {"Members receive special discounts, including "}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"$3 off per Botox unit."}
                          </span>
                        </React.Fragment>
                      </div>
                    </div>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___3Ag6L)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng55.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pDUiB)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dfht2)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__howga)}>
                  <IconLayeredCircles
                    className={classNames(
                      "__wab_instance",
                      sty.iconLayeredCircles__z245X
                    )}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__xNdwi)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/starsSvg2.svg",
                        fullWidth: 32,
                        fullHeight: 33,
                        aspectRatio: 0.969697
                      }}
                    />
                  </IconLayeredCircles>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__wzzw2)}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3TAmr)}
                >
                  <h3
                    className={classNames(
                      projectcss.all,
                      projectcss.h3,
                      projectcss.__wab_text,
                      sty.h3__gqCw3
                    )}
                  >
                    {"Real Client Transformations"}
                  </h3>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p___2QwXa
                    )}
                  >
                    {
                      "We're proud of the incredible transformations our clients achieve with Botox, and our before-and-after gallery showcases the natural, youthful results our injectors create. By addressing each client's unique facial structure and concerns, we're able to deliver outcomes that exceed expectations."
                    }
                  </p>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gIj6Z)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__e2NY)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title18"}
                        data-plasmic-override={overrides.title18}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title18)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__iWqU8)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__gK5V
                          )}
                        >
                          {"Before and After Gallery"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xbBd4
                        )}
                      >
                        {
                          "Our gallery features real clients who have achieved smoother skin, softened lines, and a rejuvenated look with Botox."
                        }
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nzJ3G)}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title19"}
                        data-plasmic-override={overrides.title19}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title19)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__xyby)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tXl1R
                          )}
                        >
                          {"Client Testimonials"}
                        </div>
                      </Stack__>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jHhYf
                        )}
                      >
                        {
                          "Many clients leave glowing testimonials about their experiences, highlighting the professionalism, care, and expertise of our team."
                        }
                      </div>
                    </div>
                  </Stack__>
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yMkP8)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng56.png",
                    fullWidth: 686,
                    fullHeight: 444,
                    aspectRatio: undefined
                  }}
                />
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__x7OV5)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__tBWck)}
                  displayHeight={"120%"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng26.png",
                    fullWidth: 1300,
                    fullHeight: 860,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </Stack__>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"faqSection"}
        data-plasmic-override={overrides.faqSection}
        className={classNames(projectcss.all, sty.faqSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__tjkj8)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__bvh1R)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___2KoD9
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Curious?"}
                  </span>
                  <React.Fragment>{" \n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#D19D51" }}
                  >
                    {"We have answers."}
                  </span>
                </React.Fragment>
              ) : (
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Curious?"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#D19D51" }}
                  >
                    {"We have answers."}
                  </span>
                </React.Fragment>
              )}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___74Pg
              )}
            >
              {
                "Visit\u00a0our Botox FAQ for answers to more common questions or contact us to schedule a consultation."
              }
            </div>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__mrdPy)}
          >
            <Faq
              answer={
                "Our commitment to personalized care, safety, and client satisfaction sets us apart. We focus on natural, long-lasting results and offer transparent pricing and rewards for loyal clients."
              }
              className={classNames("__wab_instance", sty.faq__g1EoJ)}
              question={
                "What Makes ImageLab Medspa Different from Other Providers?"
              }
            />

            <Faq
              answer={
                "Yes, we offer a complimentary 2-week follow-up to assess your results and make any necessary adjustments, ensuring your satisfaction."
              }
              className={classNames("__wab_instance", sty.faq__qxO4I)}
              question={"Do You Offer Follow-Up Appointments?"}
            />

            <Faq
              answer={
                "During your consultation, our team will assess your skin and discuss your goals to determine if Botox is the right option for you."
              }
              className={classNames("__wab_instance", sty.faq__ab5Id)}
              question={"How Do I Know if Botox is Right for Me?"}
            />
          </Stack__>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"botoxRisksSection"}
        data-plasmic-override={overrides.botoxRisksSection}
        className={classNames(projectcss.all, sty.botoxRisksSection)}
      >
        <div className={classNames(projectcss.all, sty.freeBox__bOtqw)}>
          <div
            className={classNames(
              projectcss.all,
              sty.freeBox__b4Zsq,
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "people-choose-botox-grid"
                : "people-choose-botox-grid"
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__o11Ry)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__j9Ntg)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__noOp3
                  )}
                >
                  {hasVariant(globalVariants, "screen", "midsize") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Understanding "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#D19D51", fontStyle: "italic" }}
                      >
                        {"the Risks"}
                      </span>
                      <React.Fragment> </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"of Botox"}
                      </span>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Understanding "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#D19D51", fontStyle: "italic" }}
                      >
                        {"the Risks"}
                      </span>
                      <React.Fragment> </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"of Botox"}
                      </span>
                    </React.Fragment>
                  )}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zebec
                  )}
                >
                  {
                    "Although Botox is considered safe when administered by a qualified provider, it\u2019s important to be aware of the potential risks. Here are some possible side effects and how we manage them at ImageLab Medspa:"
                  }
                </div>
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : false
              ) ? (
                <div className={classNames(projectcss.all, sty.freeBox__qbAob)}>
                  <div
                    data-plasmic-name={"botoxRisksNumberProgressMobile"}
                    data-plasmic-override={
                      overrides.botoxRisksNumberProgressMobile
                    }
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.botoxRisksNumberProgressMobile
                    )}
                  >
                    {"1"}
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__szYxH)}
                  >
                    <div
                      data-plasmic-name={"botoxRisksProgressBarMobile"}
                      data-plasmic-override={
                        overrides.botoxRisksProgressBarMobile
                      }
                      className={classNames(
                        projectcss.all,
                        sty.botoxRisksProgressBarMobile
                      )}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__c6I7)}
                    />
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jlQuq
                    )}
                  >
                    {"4"}
                  </div>
                </div>
              ) : null}
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__uMiLz)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__iBd2L)}>
                <div
                  data-plasmic-name={"botoxRisksNumberProgress"}
                  data-plasmic-override={overrides.botoxRisksNumberProgress}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.botoxRisksNumberProgress
                  )}
                >
                  {"1"}
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__p5NVg)}>
                  <div
                    data-plasmic-name={"botoxRisksProgressBar"}
                    data-plasmic-override={overrides.botoxRisksProgressBar}
                    className={classNames(
                      projectcss.all,
                      sty.botoxRisksProgressBar
                    )}
                  />

                  <div
                    className={classNames(projectcss.all, sty.freeBox__xZnwk)}
                  />
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__b47Lm
                  )}
                >
                  {"4"}
                </div>
              </div>
              <Stack__
                as={"div"}
                data-plasmic-name={"botoxRisksImagesDesk"}
                data-plasmic-override={overrides.botoxRisksImagesDesk}
                hasGap={true}
                className={classNames(projectcss.all, sty.botoxRisksImagesDesk)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__nbKs)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yeRqN)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__cWDu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vvoKd
                        )}
                      >
                        {"Temporary Redness, \nSwelling, or Bruising"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__u47P
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : hasVariant(globalVariants, "screen", "midsize")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques to minimize bruising, and we provide aftercare guidance to help you recover quickly."}
                      </div>
                    </Stack__>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__eqzCk)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng42.png",
                      fullWidth: 1264,
                      fullHeight: 1100,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__of6Bh)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6Lil2)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__unSt)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__neLhl
                        )}
                      >
                        {"Headaches or Minor Discomfort"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hboz2
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : hasVariant(globalVariants, "screen", "midsize")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : "Some clients experience mild headaches or discomfort after Botox. These effects are usually short-lived and can be managed with over-the-counter pain relief if needed."}
                      </div>
                    </Stack__>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__t94CT)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng41.png",
                      fullWidth: 632,
                      fullHeight: 550,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__xHsHp)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mc71F)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__aRp4N)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___5VFgt
                        )}
                      >
                        {"Drooping Eyelid or Asymmetry"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__m56GQ
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : hasVariant(globalVariants, "screen", "midsize")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : "Rarely, Botox can migrate to unintended muscles, potentially causing eyelid drooping or asymmetry. To minimize this risk, our injectors use precise techniques and provide post-treatment guidelines to prevent migration."}
                      </div>
                    </Stack__>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___661L4)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng44.png",
                      fullWidth: 1264,
                      fullHeight: 1100,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___669Bh)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__riCi5)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ar4WD)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__st1Ll
                        )}
                      >
                        {"Allergic Reactions"}
                      </div>
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__usBDq
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : hasVariant(globalVariants, "screen", "midsize")
                          ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                          : "While very rare, allergic reactions to Botox can occur. During your consultation, we\u2019ll review your medical history to ensure you\u2019re a good candidate and discuss any potential allergies."}
                      </div>
                    </Stack__>
                  </div>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__a0IzR)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng45.png",
                      fullWidth: 1264,
                      fullHeight: 1100,
                      aspectRatio: undefined
                    }}
                  />
                </div>
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "midsize") ? true : false
              ) ? (
                <div
                  data-plasmic-name={"botoxRisksImagesMobile"}
                  data-plasmic-override={overrides.botoxRisksImagesMobile}
                  className={classNames(
                    projectcss.all,
                    sty.botoxRisksImagesMobile
                  )}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__lnvFx)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__syCFg)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng42.png",
                        fullWidth: 1264,
                        fullHeight: 1100,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__gvjty)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sCCf3
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__rTzeS
                          )}
                        >
                          {"Temporary Redness, \nSwelling, or Bruising"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__jetNx
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : hasVariant(globalVariants, "screen", "midsize")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."}
                        </div>
                      </Stack__>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__zPjpG)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mSsnK)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gxmeG
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__wGdtZ
                          )}
                        >
                          {"Headaches or Minor Discomfort"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__zKh2D
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : hasVariant(globalVariants, "screen", "midsize")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : "Some clients experience mild headaches or discomfort after Botox. These effects are usually short-lived and can be managed with over-the-counter pain relief if needed."}
                        </div>
                      </Stack__>
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___6FCt)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng41.png",
                        fullWidth: 632,
                        fullHeight: 550,
                        aspectRatio: undefined
                      }}
                    />
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__f96C)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__jVpz4)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng44.png",
                        fullWidth: 1264,
                        fullHeight: 1100,
                        aspectRatio: undefined
                      }}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__ldyP)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cr5Z7
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tx9A
                          )}
                        >
                          {"Drooping Eyelid or Asymmetry"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eme7L
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : hasVariant(globalVariants, "screen", "midsize")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : "Rarely, Botox can migrate to unintended muscles, potentially causing eyelid drooping or asymmetry. To minimize this risk, our injectors use precise techniques and provide post-treatment guidelines to prevent migration."}
                        </div>
                      </Stack__>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__uqiI)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fhTol)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5RjnL
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__cboSy
                          )}
                        >
                          {"Allergic Reactions"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ld50
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobileOnly")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : hasVariant(globalVariants, "screen", "midsize")
                            ? "These are the most common side effects and typically resolve within a day or two. Our injectors use advanced techniques \nto minimize bruising, and we provide aftercare guidance to help you recover quickly."
                            : "While very rare, allergic reactions to Botox can occur. During your consultation, we\u2019ll review your medical history to ensure you\u2019re a good candidate and discuss any potential allergies."}
                        </div>
                      </Stack__>
                    </div>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__cEeY8)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng45.png",
                        fullWidth: 1264,
                        fullHeight: 1100,
                        aspectRatio: undefined
                      }}
                    />
                  </Stack__>
                </div>
              ) : null}
            </Stack__>
          </div>
        </div>
      </section>
      <section
        data-plasmic-name={"avoidBotoxSection"}
        data-plasmic-override={overrides.avoidBotoxSection}
        className={classNames(projectcss.all, sty.avoidBotoxSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__p3Jb1)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__ewjOv
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#302E33" }}
                >
                  {"Who Should"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic", color: "#D19D51" }}
                >
                  {"Avoid Botox?"}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#302E33" }}
                >
                  {"Who Should"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic", color: "#D19D51" }}
                >
                  {"Avoid Botox?"}
                </span>
              </React.Fragment>
            )}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__sposb
            )}
          >
            {
              "While Botox is suitable for most clients, certain individuals should avoid it or consult with a healthcare provider before treatment:"
            }
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(
            projectcss.all,
            sty.freeBox__aUbOb,
            hasVariant(globalVariants, "screen", "mobileOnly")
              ? "hide-scrollbar"
              : undefined
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__mN06)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text___6KNo4
              )}
            >
              {"Pregnant or Breastfeeding Women"}
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__kxEGy)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng12.png",
                fullWidth: 855,
                fullHeight: 573,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fHwEd
              )}
            >
              {
                "Botox is not recommended during pregnancy or breastfeeding due to the lack of studies on its effects during these periods."
              }
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__yEcoy)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__zq2Bs
              )}
            >
              {"People with Certain Medical Conditions"}
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img___7JzLl)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng13.png",
                fullWidth: 855,
                fullHeight: 573,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__wmpVf
              )}
            >
              {
                "Individuals with neurological disorders, muscle weakness, or a history of allergic reactions to Botox or similar products should avoid Botox unless advised otherwise by a medical professional."
              }
            </div>
          </div>
          <div className={classNames(projectcss.all, sty.freeBox__knVfo)}>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__vfqR
              )}
            >
              {"Those Taking Certain Medications"}
            </div>
            <PlasmicImg__
              alt={""}
              className={classNames(sty.img__yZ0DH)}
              displayHeight={"auto"}
              displayMaxHeight={"none"}
              displayMaxWidth={"100%"}
              displayMinHeight={"0"}
              displayMinWidth={"0"}
              displayWidth={"auto"}
              loading={"lazy"}
              src={{
                src: "/plasmic/image_lab_2024/images/imagePng14.png",
                fullWidth: 855,
                fullHeight: 573,
                aspectRatio: undefined
              }}
            />

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__f9Owt
              )}
            >
              {
                "Some medications, particularly blood thinners, can increase the risk of bruising and should be discussed with your provider beforehand."
              }
            </div>
          </div>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"safetyMeasuresSection"}
        data-plasmic-override={overrides.safetyMeasuresSection}
        className={classNames(projectcss.all, sty.safetyMeasuresSection)}
      >
        <div
          data-plasmic-name={"safetyMeasuresHeader"}
          data-plasmic-override={overrides.safetyMeasuresHeader}
          className={classNames(projectcss.all, sty.safetyMeasuresHeader)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__qlaBw
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Safety Measures"}
                </span>
                <React.Fragment>{"\n"}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#D19D51", fontStyle: "italic" }}
                >
                  {" at ImageLab Medspa"}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Safety Measures"}
                </span>
                <React.Fragment> </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#D19D51", fontStyle: "italic" }}
                >
                  {"at ImageLab Medspa"}
                </span>
              </React.Fragment>
            )}
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__vzzzb)}>
          <Stack__
            as={"div"}
            data-plasmic-name={"safetyMeasuresContent"}
            data-plasmic-override={overrides.safetyMeasuresContent}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.safetyMeasuresContent,
              "hide-scrollbar"
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fyJ5N)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__q9Jak
                )}
              >
                {"01"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___1Di5Y)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__uQf1L)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___6IFdx)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "256px"
                        : "264px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng36.png",
                      fullWidth: 864,
                      fullHeight: 681,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vOzAm)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___95MjE
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Experienced and Licensed Injectors"
                      : "Experienced and Licensed Injectors"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hs5Nh
                    )}
                  >
                    {
                      "Our injectors are highly trained and licensed, with a thorough understanding of facial anatomy and advanced Botox techniques. This expertise helps minimize the risk of complications and ensures beautiful, natural-looking results."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vuygs)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3NrIa
                )}
              >
                {"02"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vd3H3)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__sYrv)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__bK8Mg)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "256px"
                        : "264px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng37.png",
                      fullWidth: 864,
                      fullHeight: 681,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iD00C)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__fZVdr
                    )}
                  >
                    {"Rigorous Screening Process"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___7Mx8
                    )}
                  >
                    {
                      "Before treatment, we conduct a detailed consultation to assess your medical history, skincare goals, and any risk factors. We only proceed if Botox is deemed safe and suitable for you."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__wXcqs)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kMsyx
                )}
              >
                {"03"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cHc6C)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__w9K5)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__cbRKc)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "256px"
                        : "264px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng38.png",
                      fullWidth: 864,
                      fullHeight: 680,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___0CFed)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gSbKo
                    )}
                  >
                    {"Use of Authentic,\nFDA-Approved Botox"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__t4Nyn
                    )}
                  >
                    {
                      "We use only FDA-approved Botox, sourced directly from the manufacturer to ensure its quality and safety. Authentic Botox has a proven safety record, giving you peace of mind that you\u2019re receiving the best possible product."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__wPnqA)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__urzLt
                )}
              >
                {"04"}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ep1CJ)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__occnp)}>
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__lq9NI)}
                    displayHeight={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "256px"
                        : "264px"
                    }
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng39.png",
                      fullWidth: 864,
                      fullHeight: 680,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iu70J)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__gigMi
                    )}
                  >
                    {"Sanitary Environment \nand Sterile Techniques"}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6BXV
                    )}
                  >
                    {
                      "Our medspa adheres to high standards of cleanliness and sterilization, minimizing any risk of infection. We use sterile needles and equipment for each client to maintain a safe environment."
                    }
                  </div>
                </Stack__>
              </Stack__>
            </Stack__>
          </Stack__>
        </div>
      </section>
      <section
        data-plasmic-name={"botoxMythsSection"}
        data-plasmic-override={overrides.botoxMythsSection}
        className={classNames(projectcss.all, sty.botoxMythsSection)}
      >
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__erLlu
          )}
        >
          {hasVariant(globalVariants, "screen", "mobileOnly")
            ? "Botox Myths\n Explained"
            : "Botox Myths Explained"}
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__j0TrO)}>
          <div className={classNames(projectcss.all, sty.freeBox__lGgW)} />
        </div>
      </section>
      <section
        data-plasmic-name={"postTreatmentGuideSection"}
        data-plasmic-override={overrides.postTreatmentGuideSection}
        className={classNames(projectcss.all, sty.postTreatmentGuideSection)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__b7KjL)}
        >
          <Stack__
            as={"div"}
            data-plasmic-name={"postTreatmentGuideHeader"}
            data-plasmic-override={overrides.postTreatmentGuideHeader}
            hasGap={true}
            className={classNames(projectcss.all, sty.postTreatmentGuideHeader)}
          >
            <h2
              className={classNames(
                projectcss.all,
                projectcss.h2,
                projectcss.__wab_text,
                sty.h2__mxJWb
              )}
            >
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FFFFFF" }}
                >
                  {"Post-Treatment Guidelines \nto"}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#FAD8A7" }}
                >
                  {" "}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#E4C08C", fontStyle: "italic" }}
                >
                  {"Maximize Safety"}
                </span>
              </React.Fragment>
            </h2>
            <p
              className={classNames(
                projectcss.all,
                projectcss.p,
                projectcss.__wab_text,
                sty.p__jMXf
              )}
            >
              {
                "Following aftercare instructions is essential for ensuring safe\nand long-lasting results. Here are some recommendations:"
              }
            </p>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"postTreatmentGuideCards"}
            data-plasmic-override={overrides.postTreatmentGuideCards}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.postTreatmentGuideCards,
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "how-botox-works-cards"
                : undefined
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jjDun)}
            >
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard__dHkXm
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___6RcE)}
                    displayHeight={"20px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"20px"}
                    loading={"lazy"}
                    src={
                      hasVariant(globalVariants, "screen", "midsize")
                        ? {
                            src: "/plasmic/image_lab_2024/images/iconSvg17.svg",
                            fullWidth: 33,
                            fullHeight: 32,
                            aspectRatio: 1.03125
                          }
                        : {
                            src: "/plasmic/image_lab_2024/images/image11.svg",
                            fullWidth: 32,
                            fullHeight: 32,
                            aspectRatio: 1
                          }
                    }
                  />
                }
                image={null}
                small={true}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__oDc78
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 500 }}
                      >
                        {"Stay Upright for "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"4 Hours"}
                      </span>
                    </React.Fragment>
                  </div>
                }
              >
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__hs3NV
                  )}
                >
                  {
                    "Avoid lying down or bending over for at least four hours after your Botox treatment. This helps prevent the product from migrating to unintended areas."
                  }
                </p>
              </HowItWorksCard>
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard__yRhtx
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__w4WcC)}
                    displayHeight={"32px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"32px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/iconSvg3.svg",
                      fullWidth: 33,
                      fullHeight: 32,
                      aspectRatio: 1.03125
                    }}
                  />
                }
                image={null}
                small={true}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kMqoP
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Avoid Touching "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"or Rubbing the Treated Area"}
                      </span>
                    </React.Fragment>
                  </div>
                }
              >
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__ntrkv
                  )}
                >
                  {
                    "Botox treatments are fast, taking as little as 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                  }
                </p>
              </HowItWorksCard>
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard___7Rgc8
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__soCm8)}
                    displayHeight={"32px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"32px"}
                    loading={"lazy"}
                    src={
                      hasVariant(globalVariants, "screen", "midsize")
                        ? {
                            src: "/plasmic/image_lab_2024/images/iconSvg16.svg",
                            fullWidth: 33,
                            fullHeight: 32,
                            aspectRatio: 1.03125
                          }
                        : {
                            src: "/plasmic/image_lab_2024/images/iconSvg4.svg",
                            fullWidth: 41,
                            fullHeight: 41,
                            aspectRatio: 1
                          }
                    }
                  />
                }
                image={null}
                small={true}
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zuZ50
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Skip Exercise for "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"24 Hours"}
                      </span>
                    </React.Fragment>
                  </div>
                }
              >
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__ggIog
                  )}
                >
                  {
                    "Vigorous activity may increase blood flow, causing Botox to break down faster. Take it easy for the first day to ensure optimal results."
                  }
                </p>
              </HowItWorksCard>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"postTreatmentGuideCardsMobile"}
            data-plasmic-override={overrides.postTreatmentGuideCardsMobile}
            hasGap={true}
            className={classNames(
              projectcss.all,
              sty.postTreatmentGuideCardsMobile,
              "how-botox-works-cards"
            )}
          >
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard___7HuE0
              )}
              image={null}
              small={true}
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fJJyB
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 500 }}
                    >
                      {"Stay Upright for "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000" }}
                    >
                      {"4 Hours"}
                    </span>
                  </React.Fragment>
                </div>
              }
            >
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__vafAm
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Avoid lying down or bending over for \nat least four hours after your Botox treatment. This helps prevent the product from migrating to unintended areas."
                  : "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."}
              </p>
            </HowItWorksCard>
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard___3P6JA
              )}
              icon={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___4B7R4)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/iconSvg5.svg",
                    fullWidth: 32,
                    fullHeight: 32,
                    aspectRatio: 1
                  }}
                />
              }
              image={null}
              small={true}
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vKwGq
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Avoid Touching or "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"Rubbing \nthe Treated Area"}
                    </span>
                  </React.Fragment>
                </div>
              }
            >
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__wquHd
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Botox treatments are fast, taking as little \nas 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                  : "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."}
              </p>
            </HowItWorksCard>
            <HowItWorksCard
              className={classNames(
                "__wab_instance",
                sty.howItWorksCard__di3Z5
              )}
              icon={
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__wmczz)}
                  displayHeight={"32px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"32px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/iconSvg6.svg",
                    fullWidth: 32,
                    fullHeight: 32,
                    aspectRatio: 1
                  }}
                />
              }
              image={null}
              small={true}
              title={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__we37
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Skip Exercise for "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"24 Hours"}
                    </span>
                  </React.Fragment>
                </div>
              }
            >
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__hbVbi
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Vigorous activity may increase blood flow, causing Botox to break down faster. Take \nit easy for the first day to ensure \noptimal results."
                  : "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."}
              </p>
            </HowItWorksCard>
          </Stack__>
          <Button
            data-plasmic-name={"postTreatmentGuideButton"}
            data-plasmic-override={overrides.postTreatmentGuideButton}
            className={classNames(
              "__wab_instance",
              sty.postTreatmentGuideButton
            )}
            color={"white"}
          >
            {"Book now"}
          </Button>
        </Stack__>
      </section>
      <section
        data-plasmic-name={"faq2Section"}
        data-plasmic-override={overrides.faq2Section}
        className={classNames(projectcss.all, sty.faq2Section)}
      >
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__kufGp)}
        >
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__gPvkM
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly") ? (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Frequently"}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic", color: "#D19D51" }}
                >
                  {" Asked Questions "}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"about Botox"}
                </span>
              </React.Fragment>
            ) : (
              <React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"Frequently"}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic", color: "#D19D51" }}
                >
                  {" Asked Questions "}
                </span>
                <React.Fragment>{""}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ color: "#080909" }}
                >
                  {"about Botox"}
                </span>
              </React.Fragment>
            )}
          </div>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__mJbsE)}
        >
          <Faq
            answer={
              "Results from Botox typically start to appear within 3-5 days, with full effects visible at around two weeks. You\u2019ll notice a gradual reduction in lines and smoother skin as the Botox takes effect."
            }
            className={classNames("__wab_instance", sty.faq__rx5Jd)}
            question={"How Soon Will I See Results?"}
          />

          <Faq
            answer={
              "Most clients find that Botox lasts about 3-4 months. For best results, we recommend scheduling treatments every 3-4 months to maintain a smooth, youthful appearance. Consistent treatments can help \u201ctrain\u201d your muscles to stay relaxed, potentially extending the longevity of your results over time."
            }
            className={classNames("__wab_instance", sty.faq__cfLyn)}
            question={"How Often Should I Get Botox?"}
          />

          <Faq
            answer={
              "Botox is FDA-approved for several medical uses, including chronic migraines, TMJ (jaw clenching), and excessive sweating (hyperhidrosis). By relaxing specific muscles, Botox can provide relief from these conditions and improve quality of life."
            }
            className={classNames("__wab_instance", sty.faq___8Osar)}
            question={"Can Botox Help with Medical Conditions?"}
          />

          <Faq
            answer={
              "Not at all! Botox is a popular treatment for both men and women. At ImageLab Medspa, we tailor Botox treatments to meet the unique needs of each client, regardless of gender. Many men choose Botox to achieve a refreshed look and reduce lines without appearing overdone."
            }
            className={classNames("__wab_instance", sty.faq__pCvQl)}
            question={"Is Botox Only for Women?"}
          />
        </Stack__>
      </section>
      <OurLocationSection
        data-plasmic-name={"ourLocationSection"}
        data-plasmic-override={overrides.ourLocationSection}
        className={classNames("__wab_instance", sty.ourLocationSection)}
      />

      <section
        data-plasmic-name={"joinTheClubSection"}
        data-plasmic-override={overrides.joinTheClubSection}
        className={classNames(projectcss.all, sty.joinTheClubSection)}
      >
        <div className={classNames(projectcss.all, sty.freeBox___6J4Pq)}>
          <PlasmicImg__
            alt={""}
            className={classNames(sty.img__wtnAx)}
            displayHeight={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "255px"
                : "auto"
            }
            displayMaxHeight={"none"}
            displayMaxWidth={"100%"}
            displayMinHeight={"0"}
            displayMinWidth={"0"}
            displayWidth={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? "242px"
                : "auto"
            }
            loading={"lazy"}
            src={
              hasVariant(globalVariants, "screen", "mobileOnly")
                ? {
                    src: "/plasmic/image_lab_2024/images/imagePng16.png",
                    fullWidth: 485,
                    fullHeight: 511,
                    aspectRatio: undefined
                  }
                : {
                    src: "/plasmic/image_lab_2024/images/imagePng15.png",
                    fullWidth: 911,
                    fullHeight: 511,
                    aspectRatio: undefined
                  }
            }
          />

          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text___3Jz9
            )}
          >
            {"Smooth Skin"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__e0Wgi
            )}
          >
            {"Confidence Boost"}
          </div>
        </div>
        <div className={classNames(projectcss.all, sty.freeBox__qrBo9)}>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__rbJ8Q
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly")
              ? "Ready to See\n the Difference?"
              : "Join the Club"}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__vVhXs
            )}
          >
            {"Sign up for exclusive offers and updates."}
          </div>
          <div
            className={classNames(
              projectcss.all,
              projectcss.__wab_text,
              sty.text__kKq50
            )}
          >
            {hasVariant(globalVariants, "screen", "mobileOnly")
              ? "Book your consultation today and let our expert team help you achieve smooth, youthful skin. \nWe tailor each treatment to enhance your natural beauty, ensuring subtle, long-lasting results that boost your confidence."
              : 'You agree to subscribe to our newsletter and receive periodic updates, news, and special offers from ImageLab Med Spa. You may unsubscribe at any time by clicking the "unsubscribe" link at the bottom of our emails.'}
          </div>
          <Button
            data-plasmic-name={"joinTheClubButton"}
            data-plasmic-override={overrides.joinTheClubButton}
            className={classNames("__wab_instance", sty.joinTheClubButton)}
            color={"white"}
          >
            {"Book My Consultation Now"}
          </Button>
        </div>
      </section>
      {false ? (
        <FooterNew
          data-plasmic-name={"footerNew"}
          data-plasmic-override={overrides.footerNew}
          className={classNames("__wab_instance", sty.footerNew)}
        />
      ) : null}
    </div>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "topBotoxServicesSection",
    "prices",
    "heading",
    "price",
    "heading2",
    "heading3",
    "heading4",
    "heading5",
    "h1",
    "supportingText",
    "topBotoxServicesButton",
    "reviewsRatingPill",
    "benefitsOfBotoxSection",
    "benefitsOfBotoxHeader",
    "benefitsOfBotoxCards",
    "text2",
    "supportingText12",
    "text3",
    "supportingText13",
    "text4",
    "supportingText14",
    "text8",
    "supportingText18",
    "benefitsOfBotoxCardsMobile",
    "text5",
    "supportingText15",
    "text6",
    "supportingText6",
    "text7",
    "supportingText7",
    "text9",
    "supportingText16",
    "beforeAfterSection",
    "beforeAfterHeader",
    "beforeAfterSlider",
    "whatIsBotoxSection",
    "heading6",
    "supportingText5",
    "whatIsBotoxMobileText",
    "title20",
    "title21",
    "whatIsBotoxButton",
    "supportingText3",
    "supportingText4",
    "ourBotoxProcessSection",
    "ourBotoxProcessCircle",
    "ourBotoxProcessCircleBg",
    "ourBotoxProcessEllipse1",
    "ourBotoxProcessEllipse2",
    "ourBotoxProcessEllipse3",
    "ourBotoxProcessIcons",
    "ourBotoxProcessNumber",
    "ourBotoxProcessContent",
    "ourBotoxProcessButton",
    "affordableBotoxSection",
    "affordableBotoxButton",
    "faceSection",
    "areasInteractive",
    "botoxResultsSection",
    "resultCard",
    "ctaSection",
    "heading9",
    "supportingText8",
    "ctaButton",
    "isBotoxSafeSection",
    "heading10",
    "supportingText9",
    "supportingText10",
    "isBotoxRightSection",
    "isBotoxRightHeader",
    "isBotoxRightContent",
    "botoxAppointmentSection",
    "title",
    "title2",
    "title3",
    "botoxAppointmentButton",
    "botoxAppointmentMobileButton",
    "afterTheTreatmentSection",
    "afterTheTreatmentButton",
    "ageGroupsSection",
    "ageGroupsCard",
    "chooseBotoxSection",
    "chooseBotoxContent",
    "title4",
    "title5",
    "title6",
    "title7",
    "title8",
    "title9",
    "title10",
    "title11",
    "title12",
    "title13",
    "title14",
    "title15",
    "title16",
    "title17",
    "title18",
    "title19",
    "faqSection",
    "botoxRisksSection",
    "botoxRisksNumberProgressMobile",
    "botoxRisksProgressBarMobile",
    "botoxRisksNumberProgress",
    "botoxRisksProgressBar",
    "botoxRisksImagesDesk",
    "botoxRisksImagesMobile",
    "avoidBotoxSection",
    "safetyMeasuresSection",
    "safetyMeasuresHeader",
    "safetyMeasuresContent",
    "botoxMythsSection",
    "postTreatmentGuideSection",
    "postTreatmentGuideHeader",
    "postTreatmentGuideCards",
    "postTreatmentGuideCardsMobile",
    "postTreatmentGuideButton",
    "faq2Section",
    "ourLocationSection",
    "joinTheClubSection",
    "joinTheClubButton",
    "footerNew"
  ],

  topBotoxServicesSection: [
    "topBotoxServicesSection",
    "prices",
    "heading",
    "price",
    "heading2",
    "heading3",
    "heading4",
    "heading5",
    "h1",
    "supportingText",
    "topBotoxServicesButton",
    "reviewsRatingPill"
  ],

  prices: ["prices", "heading", "price", "heading2", "heading3", "heading4"],
  heading: ["heading"],
  price: ["price", "heading2", "heading3"],
  heading2: ["heading2"],
  heading3: ["heading3"],
  heading4: ["heading4"],
  heading5: ["heading5", "h1"],
  h1: ["h1"],
  supportingText: ["supportingText"],
  topBotoxServicesButton: ["topBotoxServicesButton"],
  reviewsRatingPill: ["reviewsRatingPill"],
  benefitsOfBotoxSection: [
    "benefitsOfBotoxSection",
    "benefitsOfBotoxHeader",
    "benefitsOfBotoxCards",
    "text2",
    "supportingText12",
    "text3",
    "supportingText13",
    "text4",
    "supportingText14",
    "text8",
    "supportingText18",
    "benefitsOfBotoxCardsMobile",
    "text5",
    "supportingText15",
    "text6",
    "supportingText6",
    "text7",
    "supportingText7",
    "text9",
    "supportingText16"
  ],

  benefitsOfBotoxHeader: ["benefitsOfBotoxHeader"],
  benefitsOfBotoxCards: [
    "benefitsOfBotoxCards",
    "text2",
    "supportingText12",
    "text3",
    "supportingText13",
    "text4",
    "supportingText14",
    "text8",
    "supportingText18"
  ],

  text2: ["text2"],
  supportingText12: ["supportingText12"],
  text3: ["text3"],
  supportingText13: ["supportingText13"],
  text4: ["text4"],
  supportingText14: ["supportingText14"],
  text8: ["text8"],
  supportingText18: ["supportingText18"],
  benefitsOfBotoxCardsMobile: [
    "benefitsOfBotoxCardsMobile",
    "text5",
    "supportingText15",
    "text6",
    "supportingText6",
    "text7",
    "supportingText7",
    "text9",
    "supportingText16"
  ],

  text5: ["text5"],
  supportingText15: ["supportingText15"],
  text6: ["text6"],
  supportingText6: ["supportingText6"],
  text7: ["text7"],
  supportingText7: ["supportingText7"],
  text9: ["text9"],
  supportingText16: ["supportingText16"],
  beforeAfterSection: [
    "beforeAfterSection",
    "beforeAfterHeader",
    "beforeAfterSlider"
  ],

  beforeAfterHeader: ["beforeAfterHeader"],
  beforeAfterSlider: ["beforeAfterSlider"],
  whatIsBotoxSection: [
    "whatIsBotoxSection",
    "heading6",
    "supportingText5",
    "whatIsBotoxMobileText",
    "title20",
    "title21",
    "whatIsBotoxButton",
    "supportingText3",
    "supportingText4"
  ],

  heading6: ["heading6"],
  supportingText5: ["supportingText5"],
  whatIsBotoxMobileText: ["whatIsBotoxMobileText"],
  title20: ["title20"],
  title21: ["title21"],
  whatIsBotoxButton: ["whatIsBotoxButton"],
  supportingText3: ["supportingText3"],
  supportingText4: ["supportingText4"],
  ourBotoxProcessSection: [
    "ourBotoxProcessSection",
    "ourBotoxProcessCircle",
    "ourBotoxProcessCircleBg",
    "ourBotoxProcessEllipse1",
    "ourBotoxProcessEllipse2",
    "ourBotoxProcessEllipse3",
    "ourBotoxProcessIcons",
    "ourBotoxProcessNumber",
    "ourBotoxProcessContent",
    "ourBotoxProcessButton"
  ],

  ourBotoxProcessCircle: ["ourBotoxProcessCircle"],
  ourBotoxProcessCircleBg: [
    "ourBotoxProcessCircleBg",
    "ourBotoxProcessEllipse1",
    "ourBotoxProcessEllipse2",
    "ourBotoxProcessEllipse3"
  ],

  ourBotoxProcessEllipse1: ["ourBotoxProcessEllipse1"],
  ourBotoxProcessEllipse2: ["ourBotoxProcessEllipse2"],
  ourBotoxProcessEllipse3: ["ourBotoxProcessEllipse3"],
  ourBotoxProcessIcons: ["ourBotoxProcessIcons"],
  ourBotoxProcessNumber: ["ourBotoxProcessNumber"],
  ourBotoxProcessContent: ["ourBotoxProcessContent"],
  ourBotoxProcessButton: ["ourBotoxProcessButton"],
  affordableBotoxSection: ["affordableBotoxSection", "affordableBotoxButton"],
  affordableBotoxButton: ["affordableBotoxButton"],
  faceSection: ["faceSection"],
  areasInteractive: ["areasInteractive"],
  botoxResultsSection: ["botoxResultsSection", "resultCard"],
  resultCard: ["resultCard"],
  ctaSection: ["ctaSection", "heading9", "supportingText8", "ctaButton"],
  heading9: ["heading9"],
  supportingText8: ["supportingText8"],
  ctaButton: ["ctaButton"],
  isBotoxSafeSection: [
    "isBotoxSafeSection",
    "heading10",
    "supportingText9",
    "supportingText10"
  ],

  heading10: ["heading10"],
  supportingText9: ["supportingText9"],
  supportingText10: ["supportingText10"],
  isBotoxRightSection: [
    "isBotoxRightSection",
    "isBotoxRightHeader",
    "isBotoxRightContent"
  ],

  isBotoxRightHeader: ["isBotoxRightHeader"],
  isBotoxRightContent: ["isBotoxRightContent"],
  botoxAppointmentSection: [
    "botoxAppointmentSection",
    "title",
    "title2",
    "title3",
    "botoxAppointmentButton",
    "botoxAppointmentMobileButton"
  ],

  title: ["title"],
  title2: ["title2"],
  title3: ["title3"],
  botoxAppointmentButton: ["botoxAppointmentButton"],
  botoxAppointmentMobileButton: ["botoxAppointmentMobileButton"],
  afterTheTreatmentSection: [
    "afterTheTreatmentSection",
    "afterTheTreatmentButton"
  ],

  afterTheTreatmentButton: ["afterTheTreatmentButton"],
  ageGroupsSection: ["ageGroupsSection", "ageGroupsCard"],
  ageGroupsCard: ["ageGroupsCard"],
  chooseBotoxSection: [
    "chooseBotoxSection",
    "chooseBotoxContent",
    "title4",
    "title5",
    "title6",
    "title7",
    "title8",
    "title9",
    "title10",
    "title11",
    "title12",
    "title13",
    "title14",
    "title15",
    "title16",
    "title17",
    "title18",
    "title19"
  ],

  chooseBotoxContent: [
    "chooseBotoxContent",
    "title4",
    "title5",
    "title6",
    "title7",
    "title8",
    "title9",
    "title10",
    "title11",
    "title12",
    "title13",
    "title14",
    "title15",
    "title16",
    "title17",
    "title18",
    "title19"
  ],

  title4: ["title4"],
  title5: ["title5"],
  title6: ["title6"],
  title7: ["title7"],
  title8: ["title8"],
  title9: ["title9"],
  title10: ["title10"],
  title11: ["title11"],
  title12: ["title12"],
  title13: ["title13"],
  title14: ["title14"],
  title15: ["title15"],
  title16: ["title16"],
  title17: ["title17"],
  title18: ["title18"],
  title19: ["title19"],
  faqSection: ["faqSection"],
  botoxRisksSection: [
    "botoxRisksSection",
    "botoxRisksNumberProgressMobile",
    "botoxRisksProgressBarMobile",
    "botoxRisksNumberProgress",
    "botoxRisksProgressBar",
    "botoxRisksImagesDesk",
    "botoxRisksImagesMobile"
  ],

  botoxRisksNumberProgressMobile: ["botoxRisksNumberProgressMobile"],
  botoxRisksProgressBarMobile: ["botoxRisksProgressBarMobile"],
  botoxRisksNumberProgress: ["botoxRisksNumberProgress"],
  botoxRisksProgressBar: ["botoxRisksProgressBar"],
  botoxRisksImagesDesk: ["botoxRisksImagesDesk"],
  botoxRisksImagesMobile: ["botoxRisksImagesMobile"],
  avoidBotoxSection: ["avoidBotoxSection"],
  safetyMeasuresSection: [
    "safetyMeasuresSection",
    "safetyMeasuresHeader",
    "safetyMeasuresContent"
  ],

  safetyMeasuresHeader: ["safetyMeasuresHeader"],
  safetyMeasuresContent: ["safetyMeasuresContent"],
  botoxMythsSection: ["botoxMythsSection"],
  postTreatmentGuideSection: [
    "postTreatmentGuideSection",
    "postTreatmentGuideHeader",
    "postTreatmentGuideCards",
    "postTreatmentGuideCardsMobile",
    "postTreatmentGuideButton"
  ],

  postTreatmentGuideHeader: ["postTreatmentGuideHeader"],
  postTreatmentGuideCards: ["postTreatmentGuideCards"],
  postTreatmentGuideCardsMobile: ["postTreatmentGuideCardsMobile"],
  postTreatmentGuideButton: ["postTreatmentGuideButton"],
  faq2Section: ["faq2Section"],
  ourLocationSection: ["ourLocationSection"],
  joinTheClubSection: ["joinTheClubSection", "joinTheClubButton"],
  joinTheClubButton: ["joinTheClubButton"],
  footerNew: ["footerNew"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBotoxSeo__ArgProps,
          internalVariantPropNames: PlasmicBotoxSeo__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBotoxSeo__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBotoxSeo";
  } else {
    func.displayName = `PlasmicBotoxSeo.${nodeName}`;
  }
  return func;
}

export const PlasmicBotoxSeo = Object.assign(
  // Top-level PlasmicBotoxSeo renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    topBotoxServicesSection: makeNodeComponent("topBotoxServicesSection"),
    prices: makeNodeComponent("prices"),
    heading: makeNodeComponent("heading"),
    price: makeNodeComponent("price"),
    heading2: makeNodeComponent("heading2"),
    heading3: makeNodeComponent("heading3"),
    heading4: makeNodeComponent("heading4"),
    heading5: makeNodeComponent("heading5"),
    h1: makeNodeComponent("h1"),
    supportingText: makeNodeComponent("supportingText"),
    topBotoxServicesButton: makeNodeComponent("topBotoxServicesButton"),
    reviewsRatingPill: makeNodeComponent("reviewsRatingPill"),
    benefitsOfBotoxSection: makeNodeComponent("benefitsOfBotoxSection"),
    benefitsOfBotoxHeader: makeNodeComponent("benefitsOfBotoxHeader"),
    benefitsOfBotoxCards: makeNodeComponent("benefitsOfBotoxCards"),
    text2: makeNodeComponent("text2"),
    supportingText12: makeNodeComponent("supportingText12"),
    text3: makeNodeComponent("text3"),
    supportingText13: makeNodeComponent("supportingText13"),
    text4: makeNodeComponent("text4"),
    supportingText14: makeNodeComponent("supportingText14"),
    text8: makeNodeComponent("text8"),
    supportingText18: makeNodeComponent("supportingText18"),
    benefitsOfBotoxCardsMobile: makeNodeComponent("benefitsOfBotoxCardsMobile"),
    text5: makeNodeComponent("text5"),
    supportingText15: makeNodeComponent("supportingText15"),
    text6: makeNodeComponent("text6"),
    supportingText6: makeNodeComponent("supportingText6"),
    text7: makeNodeComponent("text7"),
    supportingText7: makeNodeComponent("supportingText7"),
    text9: makeNodeComponent("text9"),
    supportingText16: makeNodeComponent("supportingText16"),
    beforeAfterSection: makeNodeComponent("beforeAfterSection"),
    beforeAfterHeader: makeNodeComponent("beforeAfterHeader"),
    beforeAfterSlider: makeNodeComponent("beforeAfterSlider"),
    whatIsBotoxSection: makeNodeComponent("whatIsBotoxSection"),
    heading6: makeNodeComponent("heading6"),
    supportingText5: makeNodeComponent("supportingText5"),
    whatIsBotoxMobileText: makeNodeComponent("whatIsBotoxMobileText"),
    title20: makeNodeComponent("title20"),
    title21: makeNodeComponent("title21"),
    whatIsBotoxButton: makeNodeComponent("whatIsBotoxButton"),
    supportingText3: makeNodeComponent("supportingText3"),
    supportingText4: makeNodeComponent("supportingText4"),
    ourBotoxProcessSection: makeNodeComponent("ourBotoxProcessSection"),
    ourBotoxProcessCircle: makeNodeComponent("ourBotoxProcessCircle"),
    ourBotoxProcessCircleBg: makeNodeComponent("ourBotoxProcessCircleBg"),
    ourBotoxProcessEllipse1: makeNodeComponent("ourBotoxProcessEllipse1"),
    ourBotoxProcessEllipse2: makeNodeComponent("ourBotoxProcessEllipse2"),
    ourBotoxProcessEllipse3: makeNodeComponent("ourBotoxProcessEllipse3"),
    ourBotoxProcessIcons: makeNodeComponent("ourBotoxProcessIcons"),
    ourBotoxProcessNumber: makeNodeComponent("ourBotoxProcessNumber"),
    ourBotoxProcessContent: makeNodeComponent("ourBotoxProcessContent"),
    ourBotoxProcessButton: makeNodeComponent("ourBotoxProcessButton"),
    affordableBotoxSection: makeNodeComponent("affordableBotoxSection"),
    affordableBotoxButton: makeNodeComponent("affordableBotoxButton"),
    faceSection: makeNodeComponent("faceSection"),
    areasInteractive: makeNodeComponent("areasInteractive"),
    botoxResultsSection: makeNodeComponent("botoxResultsSection"),
    resultCard: makeNodeComponent("resultCard"),
    ctaSection: makeNodeComponent("ctaSection"),
    heading9: makeNodeComponent("heading9"),
    supportingText8: makeNodeComponent("supportingText8"),
    ctaButton: makeNodeComponent("ctaButton"),
    isBotoxSafeSection: makeNodeComponent("isBotoxSafeSection"),
    heading10: makeNodeComponent("heading10"),
    supportingText9: makeNodeComponent("supportingText9"),
    supportingText10: makeNodeComponent("supportingText10"),
    isBotoxRightSection: makeNodeComponent("isBotoxRightSection"),
    isBotoxRightHeader: makeNodeComponent("isBotoxRightHeader"),
    isBotoxRightContent: makeNodeComponent("isBotoxRightContent"),
    botoxAppointmentSection: makeNodeComponent("botoxAppointmentSection"),
    title: makeNodeComponent("title"),
    title2: makeNodeComponent("title2"),
    title3: makeNodeComponent("title3"),
    botoxAppointmentButton: makeNodeComponent("botoxAppointmentButton"),
    botoxAppointmentMobileButton: makeNodeComponent(
      "botoxAppointmentMobileButton"
    ),
    afterTheTreatmentSection: makeNodeComponent("afterTheTreatmentSection"),
    afterTheTreatmentButton: makeNodeComponent("afterTheTreatmentButton"),
    ageGroupsSection: makeNodeComponent("ageGroupsSection"),
    ageGroupsCard: makeNodeComponent("ageGroupsCard"),
    chooseBotoxSection: makeNodeComponent("chooseBotoxSection"),
    chooseBotoxContent: makeNodeComponent("chooseBotoxContent"),
    title4: makeNodeComponent("title4"),
    title5: makeNodeComponent("title5"),
    title6: makeNodeComponent("title6"),
    title7: makeNodeComponent("title7"),
    title8: makeNodeComponent("title8"),
    title9: makeNodeComponent("title9"),
    title10: makeNodeComponent("title10"),
    title11: makeNodeComponent("title11"),
    title12: makeNodeComponent("title12"),
    title13: makeNodeComponent("title13"),
    title14: makeNodeComponent("title14"),
    title15: makeNodeComponent("title15"),
    title16: makeNodeComponent("title16"),
    title17: makeNodeComponent("title17"),
    title18: makeNodeComponent("title18"),
    title19: makeNodeComponent("title19"),
    faqSection: makeNodeComponent("faqSection"),
    botoxRisksSection: makeNodeComponent("botoxRisksSection"),
    botoxRisksNumberProgressMobile: makeNodeComponent(
      "botoxRisksNumberProgressMobile"
    ),
    botoxRisksProgressBarMobile: makeNodeComponent(
      "botoxRisksProgressBarMobile"
    ),
    botoxRisksNumberProgress: makeNodeComponent("botoxRisksNumberProgress"),
    botoxRisksProgressBar: makeNodeComponent("botoxRisksProgressBar"),
    botoxRisksImagesDesk: makeNodeComponent("botoxRisksImagesDesk"),
    botoxRisksImagesMobile: makeNodeComponent("botoxRisksImagesMobile"),
    avoidBotoxSection: makeNodeComponent("avoidBotoxSection"),
    safetyMeasuresSection: makeNodeComponent("safetyMeasuresSection"),
    safetyMeasuresHeader: makeNodeComponent("safetyMeasuresHeader"),
    safetyMeasuresContent: makeNodeComponent("safetyMeasuresContent"),
    botoxMythsSection: makeNodeComponent("botoxMythsSection"),
    postTreatmentGuideSection: makeNodeComponent("postTreatmentGuideSection"),
    postTreatmentGuideHeader: makeNodeComponent("postTreatmentGuideHeader"),
    postTreatmentGuideCards: makeNodeComponent("postTreatmentGuideCards"),
    postTreatmentGuideCardsMobile: makeNodeComponent(
      "postTreatmentGuideCardsMobile"
    ),
    postTreatmentGuideButton: makeNodeComponent("postTreatmentGuideButton"),
    faq2Section: makeNodeComponent("faq2Section"),
    ourLocationSection: makeNodeComponent("ourLocationSection"),
    joinTheClubSection: makeNodeComponent("joinTheClubSection"),
    joinTheClubButton: makeNodeComponent("joinTheClubButton"),
    footerNew: makeNodeComponent("footerNew"),
    // Metadata about props expected for PlasmicBotoxSeo
    internalVariantProps: PlasmicBotoxSeo__VariantProps,
    internalArgProps: PlasmicBotoxSeo__ArgProps
  }
);

export default PlasmicBotoxSeo;
/* prettier-ignore-end */
