// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fpxTiFS69ULcX4wDGEfw3c
// Component: HHDo-tjfFB5q
import * as React from "react";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import Image from "../../Image"; // plasmic-import: RztwCPEvZ6JR/component
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../blank_website/plasmic.module.css"; // plasmic-import: fpxTiFS69ULcX4wDGEfw3c/projectcss
import sty from "./PlasmicInfiniteScroller.module.css"; // plasmic-import: HHDo-tjfFB5q/css

createPlasmicElementProxy;

export const PlasmicInfiniteScroller__VariantProps = new Array();

export const PlasmicInfiniteScroller__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicInfiniteScroller__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__tnbf2)}>
        <Stack__
          as={"div"}
          data-plasmic-name={"infiniteAnimator"}
          data-plasmic-override={overrides.infiniteAnimator}
          hasGap={true}
          className={classNames(projectcss.all, sty.infiniteAnimator)}
        >
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__hFwHj)}
          >
            <Image
              className={classNames("__wab_instance", sty.image__yVecl)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__su97G)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba1Webp.webp",
                  fullWidth: 394,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image___5MZcp)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img___0Bjsg)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba2Webp.webp",
                  fullWidth: 394,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image___8Jtx)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__htCda)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba3Webp.webp",
                  fullWidth: 394,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image__eQM9)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__kmSoI)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/beforeWebp.webp",
                  fullWidth: 393,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image__d0Nr)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__h9V6W)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba5Webp.webp",
                  fullWidth: 393,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__yJp6K)}
          >
            <Image
              className={classNames("__wab_instance", sty.image___0YtGl)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__jLcve)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba1Webp.webp",
                  fullWidth: 394,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image__rpKb)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__uiov6)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba2Webp.webp",
                  fullWidth: 394,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image__e87Ll)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__tmTuq)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba3Webp.webp",
                  fullWidth: 394,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image__aIGr9)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__a8PrN)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/beforeWebp.webp",
                  fullWidth: 393,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
            <Image
              className={classNames("__wab_instance", sty.image__zYtFr)}
              rounded={true}
              shadow={true}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__lQubi)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"364px"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/ba5Webp.webp",
                  fullWidth: 393,
                  fullHeight: 336,
                  aspectRatio: undefined
                }}
              />
            </Image>
          </Stack__>
        </Stack__>
      </div>
    </div>
  );
}

const PlasmicDescendants = {
  root: ["root", "infiniteAnimator"],
  infiniteAnimator: ["infiniteAnimator"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicInfiniteScroller__ArgProps,
          internalVariantPropNames: PlasmicInfiniteScroller__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicInfiniteScroller__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicInfiniteScroller";
  } else {
    func.displayName = `PlasmicInfiniteScroller.${nodeName}`;
  }
  return func;
}

export const PlasmicInfiniteScroller = Object.assign(
  // Top-level PlasmicInfiniteScroller renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    infiniteAnimator: makeNodeComponent("infiniteAnimator"),
    // Metadata about props expected for PlasmicInfiniteScroller
    internalVariantProps: PlasmicInfiniteScroller__VariantProps,
    internalArgProps: PlasmicInfiniteScroller__ArgProps
  }
);

export default PlasmicInfiniteScroller;
/* prettier-ignore-end */
