// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fpxTiFS69ULcX4wDGEfw3c
// Component: 9rME71zJbGo1
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  hasVariant,
  set as $stateSet,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import DiscountPricingPill from "../../DiscountPricingPill"; // plasmic-import: TO66K8qjr8TP/component
import ReviewsRatingPill from "../../ReviewsRatingPill"; // plasmic-import: lUTkTuQcsEcx/component
import Button from "../../Button"; // plasmic-import: 0o-OkGmTYJg3/component
import IconLayeredCircles from "../../IconLayeredCircles"; // plasmic-import: otc6Jw_feodx/component
import HowItWorksCard from "../../HowItWorksCard"; // plasmic-import: w7EJDoU6NMVc/component
import SelectPill from "../../SelectPill"; // plasmic-import: XgOD49Zg0vP7/component
import FaceDot from "../../FaceDot"; // plasmic-import: B4gD5jrIlb5E/component
import AreaCard from "../../AreaCard"; // plasmic-import: pX5xJXaiuz4K/component
import TestimonialsSlider from "@/components/TestimonialsSlider/TestimonialsSlider"; // plasmic-import: J0SSSRogRoTR/codeComponent
import TestimonialCard from "../../TestimonialCard"; // plasmic-import: zWVJ2Qd7n2nR/component
import AreaExplainerCard from "../../AreaExplainerCard"; // plasmic-import: 4NENsursTaMC/component
import BigTestimonial from "../../BigTestimonial"; // plasmic-import: qZkEECWSrv1-/component
import Faq from "../../Faq"; // plasmic-import: kXqZTEGKWOeX/component
import ContactCardNew from "../../ContactCardNew"; // plasmic-import: NLqAqGxR_jhT/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { useScreenVariants as useScreenVariants_4IUcgkiijTv2 } from "../blank_website/PlasmicGlobalVariant__Screen"; // plasmic-import: 4iUCGKIIJTv2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import projectcss from "../blank_website/plasmic.module.css"; // plasmic-import: fpxTiFS69ULcX4wDGEfw3c/projectcss
import sty from "./PlasmicLander.module.css"; // plasmic-import: 9rME71zJbGo1/css
import Icon9Icon from "./icons/PlasmicIcon__Icon9"; // plasmic-import: fgEQ3xZTbtTI/icon
import VectorHeartSvgIcon from "./icons/PlasmicIcon__VectorHeartSvg"; // plasmic-import: JbM7XFcjDUEn/icon
import VectorPersonSvgIcon from "./icons/PlasmicIcon__VectorPersonSvg"; // plasmic-import: OvyHUiQ4SEzz/icon
import Icon12Icon from "./icons/PlasmicIcon__Icon12"; // plasmic-import: 3KQb1fQVkJAN/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: 5h3DURpjzPGy/icon

createPlasmicElementProxy;

export const PlasmicLander__VariantProps = new Array();

export const PlasmicLander__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicLander__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "selectedArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Forehead"
      },
      {
        path: "areasList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            name: "Forehead",
            range: "$100 - $200",
            units: "10-20 units",
            face_dot: { left: "51.5%", top: "10%" }
          },
          {
            name: "Brow Lift",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "67%", top: "22%" }
          },
          {
            name: "Crow's Feet",
            range: "$50 - $150",
            units: "5-15 units",
            face_dot: { left: "75%", top: "37%" }
          },
          {
            name: "11'S",
            range: "$200 - $300",
            units: "20-30 units",
            face_dot: { left: "51.5%", top: "27%" }
          },
          {
            name: "Nasolabial Folds",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "36%", top: "61%" }
          },
          {
            name: "Gummy Smile",
            range: "$100",
            units: "Varies",
            face_dot: { left: "49%", top: "65%" }
          },
          {
            name: "Lip Flip",
            range: "$125",
            units: "Varies",
            face_dot: { left: "58%", top: "73%" }
          },
          {
            name: "Chin Dimpling",
            range: "$40 - $100",
            units: "4-10 units",
            face_dot: { left: "51.5%", top: "91%" }
          },
          {
            name: "Masseter",
            range: "$200 - $400",
            units: "20-40 units",
            face_dot: { left: "65%", top: "63%" }
          }
        ]
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_4IUcgkiijTv2()
  });
  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            className={classNames(projectcss.all, sty.hero)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__vUeE3)}
            >
              <div className={classNames(projectcss.all, sty.freeBox___024F)}>
                <DiscountPricingPill
                  className={classNames(
                    "__wab_instance",
                    sty.discountPricingPill__lyb
                  )}
                />

                <div className={classNames(projectcss.all, sty.freeBox__xeJeY)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___6RoWb)}
                    style={{ display: "inline" }}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___1NJ
                      )}
                      style={{ display: "inline" }}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Erase "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{
                            fontWeight: 500,
                            fontStyle: "italic",
                            color: "#D19D51"
                          }}
                        >
                          {"Wrinkles"}
                        </span>
                        <React.Fragment>{", Enhance your "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{
                            fontStyle: "italic",
                            fontWeight: 500,
                            color: "#D19D51"
                          }}
                        >
                          {"Confidence"}
                        </span>
                      </React.Fragment>
                    </h1>
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___41Z1)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "48px"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image9.png",
                        fullWidth: 98,
                        fullHeight: 52,
                        aspectRatio: undefined
                      }}
                      style={{ display: "inline-block" }}
                    />
                  </div>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__kl4Li
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Claim your exclusive "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700, color: "#000000" }}
                      >
                        {"30% offer"}
                      </span>
                      <React.Fragment>
                        {
                          " now & reduce the signs of aging with quick, minimally invasive Botox treatments."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </p>
                </div>
                <ReviewsRatingPill
                  className={classNames(
                    "__wab_instance",
                    sty.reviewsRatingPill__xv8Ss
                  )}
                />

                <div className={classNames(projectcss.all, sty.freeBox__mLw8)}>
                  <Button
                    data-plasmic-name={"heroButton"}
                    data-plasmic-override={overrides.heroButton}
                    className={classNames("__wab_instance", sty.heroButton)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vVmFi
                      )}
                    >
                      {"Book Now"}
                    </div>
                  </Button>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__wyX9A)}>
                <PlasmicImg__
                  data-plasmic-name={"heroImage"}
                  data-plasmic-override={overrides.heroImage}
                  alt={""}
                  className={classNames(sty.heroImage)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"120%"}
                  displayMinWidth={"100%"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/image10.heic",
                    fullWidth: 670,
                    fullHeight: 564,
                    aspectRatio: undefined
                  }}
                />
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"threeCardsSection"}
            data-plasmic-override={overrides.threeCardsSection}
            className={classNames(projectcss.all, sty.threeCardsSection)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"threeCards"}
              data-plasmic-override={overrides.threeCards}
              hasGap={true}
              className={classNames(projectcss.all, sty.threeCards)}
            >
              <div className={classNames(projectcss.all, sty.freeBox__aBZlq)}>
                <div className={classNames(projectcss.all, sty.freeBox__zjMdy)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__txJhU)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___4BU6T)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image11.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rYcX)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__tyIsz
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700, fontStyle: "italic" }}
                        >
                          {"FREE"}
                        </span>
                        <React.Fragment>{" Consultation"}</React.Fragment>
                      </React.Fragment>
                    </h4>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__t7NH5)}>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__rFmv
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {"Claim your first consultation by "}
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {"FREE"}
                      </span>
                    </React.Fragment>
                  </p>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__dnMpm)}>
                <div className={classNames(projectcss.all, sty.freeBox__vXo)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yxCqw)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___062ZL)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/iconamoonDiscountThinSvg.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nGf9K)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zk4EF
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Special Price "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"$9.99/unit botox"}
                        </span>
                      </React.Fragment>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__kcoYh)}>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__bfxgO
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Exclusive"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 700 }}
                      >
                        {" 30% discount "}
                      </span>
                      <React.Fragment>
                        {"for your first procedure"}
                      </React.Fragment>
                    </React.Fragment>
                  </p>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__qeKs)}>
                <div className={classNames(projectcss.all, sty.freeBox__ou5QZ)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ebx9F)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__eDuFq)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/circumStarSvg.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__aicH3)}
                  >
                    <h4
                      className={classNames(
                        projectcss.all,
                        projectcss.h4,
                        projectcss.__wab_text,
                        sty.h4__idBx0
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700, fontStyle: "italic" }}
                        >
                          {"Certified "}
                        </span>
                        <React.Fragment>{"Professionals"}</React.Fragment>
                      </React.Fragment>
                    </h4>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__uNnju)}>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__iycYo
                    )}
                  >
                    {"Only experienced experts for safe results"}
                  </p>
                </div>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"chooseBotoxSection"}
            data-plasmic-override={overrides.chooseBotoxSection}
            className={classNames(projectcss.all, sty.chooseBotoxSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__a4Yp)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"chooseBotoxHeader"}
                data-plasmic-override={overrides.chooseBotoxHeader}
                hasGap={true}
                className={classNames(projectcss.all, sty.chooseBotoxHeader)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__jhpM3
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontStyle: "italic",
                        fontWeight: 500,
                        color: "#D19D51"
                      }}
                    >
                      {"People"}
                    </span>
                    <React.Fragment>{" Choose Botox"}</React.Fragment>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__zSnqu
                  )}
                >
                  {
                    "Trusted by 240+ clients and backed by a 98% satisfaction rate, \nbotox procedure delivers with the highest standards in safety and care."
                  }
                </p>
              </Stack__>
              <div
                className={classNames(
                  projectcss.all,
                  sty.freeBox___0Q6Io,
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "people-choose-botox-grid"
                    : "people-choose-botox-grid"
                )}
              >
                <div className={classNames(projectcss.all, sty.freeBox__tKbe)}>
                  <div
                    data-plasmic-name={"chooseBotoxBar"}
                    data-plasmic-override={overrides.chooseBotoxBar}
                    className={classNames(projectcss.all, sty.chooseBotoxBar)}
                  />

                  <IconLayeredCircles
                    data-plasmic-name={"chooseBotoxDot"}
                    data-plasmic-override={overrides.chooseBotoxDot}
                    className={classNames("__wab_instance", sty.chooseBotoxDot)}
                  >
                    <Icon9Icon
                      className={classNames(
                        projectcss.all,
                        sty.svg__zUoHt,
                        "dot-icon"
                      )}
                      role={"img"}
                    />

                    <VectorHeartSvgIcon
                      className={classNames(
                        projectcss.all,
                        sty.svg___8A47X,
                        "dot-icon"
                      )}
                      role={"img"}
                    />

                    <VectorPersonSvgIcon
                      className={classNames(
                        projectcss.all,
                        sty.svg__zLy1,
                        "dot-icon"
                      )}
                      role={"img"}
                    />
                  </IconLayeredCircles>
                </div>
                <div
                  data-plasmic-name={"chooseBotoxPoints"}
                  data-plasmic-override={overrides.chooseBotoxPoints}
                  className={classNames(projectcss.all, sty.chooseBotoxPoints)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__aCp5)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? false
                        : true
                    ) ? (
                      <IconLayeredCircles
                        data-plasmic-name={"chooseBotoxDot2"}
                        data-plasmic-override={overrides.chooseBotoxDot2}
                        className={classNames(
                          "__wab_instance",
                          sty.chooseBotoxDot2
                        )}
                      >
                        <Icon9Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg__hZfD6,
                            "dot-icon"
                          )}
                          role={"img"}
                        />
                      </IconLayeredCircles>
                    ) : null}
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gNPhq)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__ba4K6
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{"What is "}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, fontStyle: "italic" }}
                          >
                            {"Botox?"}
                          </span>
                        </React.Fragment>
                      </h3>
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__u3DCv
                        )}
                      >
                        {
                          "Botox is a safe and effective FDA-approved treatment used \nto reduce wrinkles and fine lines. It works by temporarily relaxing muscles in areas prone to aging, like the forehead and around the eyes, providing a naturally refreshed look. "
                        }
                      </p>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jkH0O)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? false
                        : true
                    ) ? (
                      <IconLayeredCircles
                        data-plasmic-name={"chooseBotoxDot3"}
                        data-plasmic-override={overrides.chooseBotoxDot3}
                        className={classNames(
                          "__wab_instance",
                          sty.chooseBotoxDot3
                        )}
                      >
                        <VectorHeartSvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg__v2Fk3,
                            "dot-icon"
                          )}
                          role={"img"}
                        />
                      </IconLayeredCircles>
                    ) : null}
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__kKbLm)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__axj8O
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{"Why "}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, fontStyle: "italic" }}
                          >
                            {"Choose"}
                          </span>
                          <React.Fragment>{" Botox?"}</React.Fragment>
                        </React.Fragment>
                      </h3>
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p___7GW3C
                        )}
                      >
                        {
                          "Your safety is our top priority. Our licensed professionals use industry-leading techniques in a controlled, sterile environment. We believe in natural-looking results that allow your natural beauty to shine."
                        }
                      </p>
                    </Stack__>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___1HoDw)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? false
                        : true
                    ) ? (
                      <IconLayeredCircles
                        data-plasmic-name={"chooseBotoxDot4"}
                        data-plasmic-override={overrides.chooseBotoxDot4}
                        className={classNames(
                          "__wab_instance",
                          sty.chooseBotoxDot4
                        )}
                      >
                        <VectorPersonSvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg__hneYz,
                            "dot-icon"
                          )}
                          role={"img"}
                        />
                      </IconLayeredCircles>
                    ) : null}
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sd3Ae)}
                    >
                      <h3
                        className={classNames(
                          projectcss.all,
                          projectcss.h3,
                          projectcss.__wab_text,
                          sty.h3__kuXrf
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{"Safe and "}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, fontStyle: "italic" }}
                          >
                            {"Professional"}
                          </span>
                          <React.Fragment>{" Care"}</React.Fragment>
                        </React.Fragment>
                      </h3>
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__yttPr
                        )}
                      >
                        {
                          "Your safety is our top priority. Our licensed professionals use industry-leading techniques in a controlled, sterile environment. We believe in natural-looking results that allow your natural beauty to shine."
                        }
                      </p>
                      {(
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? false
                          : true
                      ) ? (
                        <Button
                          data-plasmic-name={"chooseBotoxButton"}
                          data-plasmic-override={overrides.chooseBotoxButton}
                          className={classNames(
                            "__wab_instance",
                            sty.chooseBotoxButton
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dcr20
                            )}
                          >
                            {"Book Consultation Now"}
                          </div>
                        </Button>
                      ) : null}
                    </Stack__>
                  </Stack__>
                </div>
                <div
                  data-plasmic-name={"chooseBotoxImages"}
                  data-plasmic-override={overrides.chooseBotoxImages}
                  className={classNames(projectcss.all, sty.chooseBotoxImages)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__u1H78)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__wKvp)}
                      displayHeight={"120%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image13.heic",
                        fullWidth: 650,
                        fullHeight: 420,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ci3Do)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___0Uydh)}
                      displayHeight={"120%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image21Avif.avif",
                        fullWidth: 650,
                        fullHeight: 420,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mzvU)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__w3Ydj)}
                      displayHeight={"120%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image11Avif.avif",
                        fullWidth: 650,
                        fullHeight: 420,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                </div>
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                ) ? (
                  <Button
                    className={classNames("__wab_instance", sty.button__waAp7)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__rzOl7
                      )}
                    >
                      {"Book Consultation Now"}
                    </div>
                  </Button>
                ) : null}
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"howBotoxWorksSection"}
            data-plasmic-override={overrides.howBotoxWorksSection}
            className={classNames(projectcss.all, sty.howBotoxWorksSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__jomPy)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"howBotoxWorksHeader"}
                data-plasmic-override={overrides.howBotoxWorksHeader}
                hasGap={true}
                className={classNames(projectcss.all, sty.howBotoxWorksHeader)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__egivG
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontStyle: "italic",
                        fontWeight: 500,
                        color: "#FAD8A7"
                      }}
                    >
                      {"How"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FAD8A7" }}
                    >
                      {" "}
                    </span>
                    <React.Fragment>{"Botox Works"}</React.Fragment>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__l5CD
                  )}
                >
                  {
                    "Over 240 clients have experienced age-defying results with our science-backed approach, ensuring safe, smooth, and rejuvenated skin."
                  }
                </p>
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? false
                  : true
              ) ? (
                <Stack__
                  as={"div"}
                  data-plasmic-name={"howBotoxWorksCards"}
                  data-plasmic-override={overrides.howBotoxWorksCards}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.howBotoxWorksCards,
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "how-botox-works-cards"
                      : undefined
                  )}
                >
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__l4Wa6
                    )}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__lXFf)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/image31ResultAvif.avif",
                          fullWidth: 511,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__silX
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {"Targeted "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, fontStyle: "italic" }}
                          >
                            {"Muscle"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {" Relaxation"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__hogAn
                      )}
                    >
                      {
                        "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."
                      }
                    </p>
                  </HowItWorksCard>
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__ypDsy
                    )}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__sk1Tu)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/imageResultAvif.avif",
                          fullWidth: 511,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    title={"Clinically Proven, FDA-Approved"}
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__hQc6K
                      )}
                    >
                      {
                        "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."
                      }
                    </p>
                  </HowItWorksCard>
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__xryv4
                    )}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__f7YOr)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/image1ResultAvif.avif",
                          fullWidth: 511,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__aajua
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontStyle: "italic", fontWeight: 700 }}
                          >
                            {"Natural Results"}
                          </span>
                          <React.Fragment>{" Over Time"}</React.Fragment>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__yiW7R
                      )}
                    >
                      {
                        "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."
                      }
                    </p>
                  </HowItWorksCard>
                </Stack__>
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox__cdLSd)}>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"howBotoxWorksCardsMobile"}
                  data-plasmic-override={overrides.howBotoxWorksCardsMobile}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.howBotoxWorksCardsMobile,
                    "how-botox-works-cards"
                  )}
                >
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__g3VMt
                    )}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__hLfb4)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/image31ResultAvif.avif",
                          fullWidth: 511,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__w77Yi
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {"Targeted "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700, fontStyle: "italic" }}
                          >
                            {"Muscle"}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {" Relaxation"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p___1EKyh
                      )}
                    >
                      {
                        "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."
                      }
                    </p>
                  </HowItWorksCard>
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__aDoGa
                    )}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__zg1LK)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/imageResultAvif.avif",
                          fullWidth: 511,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    title={"Clinically Proven, FDA-Approved"}
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p___9Cg36
                      )}
                    >
                      {
                        "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."
                      }
                    </p>
                  </HowItWorksCard>
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__qMTp
                    )}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__cAFuo)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"auto"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/image1ResultAvif.avif",
                          fullWidth: 511,
                          fullHeight: 256,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xWjwv
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontStyle: "italic", fontWeight: 700 }}
                          >
                            {"Natural Results"}
                          </span>
                          <React.Fragment>{" Over Time"}</React.Fragment>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__twZCe
                      )}
                    >
                      {
                        "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."
                      }
                    </p>
                  </HowItWorksCard>
                </Stack__>
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"faceSection"}
            data-plasmic-override={overrides.faceSection}
            className={classNames(projectcss.all, sty.faceSection)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"columns"}
              data-plasmic-override={overrides.columns}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns)}
            >
              <div className={classNames(projectcss.all, sty.column__nm7S)}>
                <div className={classNames(projectcss.all, sty.freeBox__zcnJv)}>
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"faceHeader"}
                    data-plasmic-override={overrides.faceHeader}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.faceHeader)}
                  >
                    <h2
                      className={classNames(
                        projectcss.all,
                        projectcss.h2,
                        projectcss.__wab_text,
                        sty.h2__kvRue
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>
                          {"Achieve Flawless Skin \nat "}
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{
                            fontWeight: 500,
                            fontStyle: "italic",
                            color: "#D19D51"
                          }}
                        >
                          {"Affordable Prices"}
                        </span>
                      </React.Fragment>
                    </h2>
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__qnMfD
                      )}
                    >
                      {
                        "We offer affordable prices for high-quality materials and only professionals in their field."
                      }
                    </p>
                  </Stack__>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__yhVyp)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? false
                        : true
                    ) ? (
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"facePills"}
                        data-plasmic-override={overrides.facePills}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.facePills)}
                      >
                        {(_par =>
                          !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                          (() => {
                            try {
                              return $state.areasList;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        ).map((__plasmic_item_0, __plasmic_idx_0) => {
                          const currentItem = __plasmic_item_0;
                          const currentIndex = __plasmic_idx_0;
                          return (
                            <SelectPill
                              className={classNames(
                                "__wab_instance",
                                sty.selectPill__ieL9S
                              )}
                              handleClick={async () => {
                                const $steps = {};
                                $steps["updateSelectedArea"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["selectedArea"]
                                        },
                                        operation: 0,
                                        value: currentItem.name
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;
                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateSelectedArea"] != null &&
                                  typeof $steps["updateSelectedArea"] ===
                                    "object" &&
                                  typeof $steps["updateSelectedArea"].then ===
                                    "function"
                                ) {
                                  $steps["updateSelectedArea"] = await $steps[
                                    "updateSelectedArea"
                                  ];
                                }
                              }}
                              key={currentIndex}
                              selected={(() => {
                                try {
                                  return (
                                    currentItem.name === $state.selectedArea
                                  );
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return [];
                                  }
                                  throw e;
                                }
                              })()}
                              value={(() => {
                                try {
                                  return currentItem.name;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return undefined;
                                  }
                                  throw e;
                                }
                              })()}
                            />
                          );
                        })}
                      </Stack__>
                    ) : null}
                  </div>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__lwSyn)}>
                <div
                  data-plasmic-name={"faceDots"}
                  data-plasmic-override={overrides.faceDots}
                  className={classNames(projectcss.all, sty.faceDots)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "midsize")
                      ? false
                      : true
                  ) ? (
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__wI9Yu)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image15.heic",
                        fullWidth: 650,
                        fullHeight: 494,
                        aspectRatio: undefined
                      }}
                    />
                  ) : null}
                  {(
                    hasVariant(globalVariants, "screen", "midsize")
                      ? true
                      : false
                  ) ? (
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lNp9I)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image23.avif",
                        fullWidth: 828,
                        fullHeight: 1182,
                        aspectRatio: undefined
                      }}
                    />
                  ) : null}
                  <div
                    data-plasmic-name={"dots"}
                    data-plasmic-override={overrides.dots}
                    className={classNames(projectcss.all, sty.dots)}
                  >
                    {(_par =>
                      !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                      (() => {
                        try {
                          return $state.areasList;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()
                    ).map((__plasmic_item_0, __plasmic_idx_0) => {
                      const currentItem = __plasmic_item_0;
                      const currentIndex = __plasmic_idx_0;
                      return (
                        <FaceDot
                          data-plasmic-name={"faceDot"}
                          data-plasmic-override={overrides.faceDot}
                          className={classNames("__wab_instance", sty.faceDot)}
                          handleClick={async () => {
                            const $steps = {};
                            $steps["updateSelectedArea"] = true
                              ? (() => {
                                  const actionArgs = {
                                    variable: {
                                      objRoot: $state,
                                      variablePath: ["selectedArea"]
                                    },
                                    operation: 0,
                                    value: currentItem.name
                                  };
                                  return (({
                                    variable,
                                    value,
                                    startIndex,
                                    deleteCount
                                  }) => {
                                    if (!variable) {
                                      return;
                                    }
                                    const { objRoot, variablePath } = variable;
                                    $stateSet(objRoot, variablePath, value);
                                    return value;
                                  })?.apply(null, [actionArgs]);
                                })()
                              : undefined;
                            if (
                              $steps["updateSelectedArea"] != null &&
                              typeof $steps["updateSelectedArea"] ===
                                "object" &&
                              typeof $steps["updateSelectedArea"].then ===
                                "function"
                            ) {
                              $steps["updateSelectedArea"] = await $steps[
                                "updateSelectedArea"
                              ];
                            }
                          }}
                          key={currentIndex}
                          left={(() => {
                            try {
                              return currentItem.face_dot.left;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                          selected={(() => {
                            try {
                              return $state.selectedArea === currentItem.name;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()}
                          top={(() => {
                            try {
                              return currentItem.face_dot.top;
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return undefined;
                              }
                              throw e;
                            }
                          })()}
                          value={"Forehead"}
                        />
                      );
                    })}
                  </div>
                  <AreaCard
                    data-plasmic-name={"faceCard"}
                    data-plasmic-override={overrides.faceCard}
                    className={classNames("__wab_instance", sty.faceCard)}
                    data={(() => {
                      try {
                        return $state.areasList.find(
                          item => item.name === $state.selectedArea
                        );
                      } catch (e) {
                        if (
                          e instanceof TypeError ||
                          e?.plasmicType === "PlasmicUndefinedDataError"
                        ) {
                          return undefined;
                        }
                        throw e;
                      }
                    })()}
                  />
                </div>
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__hWod1)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qsaYn)}
                    >
                      {(_par =>
                        !_par ? [] : Array.isArray(_par) ? _par : [_par])(
                        (() => {
                          try {
                            return $state.areasList;
                          } catch (e) {
                            if (
                              e instanceof TypeError ||
                              e?.plasmicType === "PlasmicUndefinedDataError"
                            ) {
                              return [];
                            }
                            throw e;
                          }
                        })()
                      ).map((__plasmic_item_0, __plasmic_idx_0) => {
                        const currentItem = __plasmic_item_0;
                        const currentIndex = __plasmic_idx_0;
                        return (
                          <SelectPill
                            className={classNames(
                              "__wab_instance",
                              sty.selectPill__mWy5C
                            )}
                            handleClick={async () => {
                              const $steps = {};
                              $steps["updateSelectedArea"] = true
                                ? (() => {
                                    const actionArgs = {
                                      variable: {
                                        objRoot: $state,
                                        variablePath: ["selectedArea"]
                                      },
                                      operation: 0,
                                      value: currentItem.name
                                    };
                                    return (({
                                      variable,
                                      value,
                                      startIndex,
                                      deleteCount
                                    }) => {
                                      if (!variable) {
                                        return;
                                      }
                                      const { objRoot, variablePath } =
                                        variable;
                                      $stateSet(objRoot, variablePath, value);
                                      return value;
                                    })?.apply(null, [actionArgs]);
                                  })()
                                : undefined;
                              if (
                                $steps["updateSelectedArea"] != null &&
                                typeof $steps["updateSelectedArea"] ===
                                  "object" &&
                                typeof $steps["updateSelectedArea"].then ===
                                  "function"
                              ) {
                                $steps["updateSelectedArea"] = await $steps[
                                  "updateSelectedArea"
                                ];
                              }
                            }}
                            key={currentIndex}
                            selected={(() => {
                              try {
                                return currentItem.name === $state.selectedArea;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()}
                            value={(() => {
                              try {
                                return currentItem.name;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return undefined;
                                }
                                throw e;
                              }
                            })()}
                          />
                        );
                      })}
                    </Stack__>
                  </div>
                ) : null}
              </div>
            </Stack__>
          </section>
          <section
            data-plasmic-name={"beforeAfterSection"}
            data-plasmic-override={overrides.beforeAfterSection}
            className={classNames(projectcss.all, sty.beforeAfterSection)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"beforeAfterHeader"}
              data-plasmic-override={overrides.beforeAfterHeader}
              hasGap={true}
              className={classNames(projectcss.all, sty.beforeAfterHeader)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__yHrxl
                )}
              >
                <React.Fragment>
                  <React.Fragment>{"Before & "}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{
                      fontStyle: "italic",
                      fontWeight: 500,
                      color: "#D19D51"
                    }}
                  >
                    {"After"}
                  </span>
                </React.Fragment>
              </h2>
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__en7Rd
                )}
              >
                {"The results of our 240+ clients speak for themselves."}
              </p>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__bOf5N)}>
              <TestimonialsSlider
                data-plasmic-name={"beforeAfterSlider"}
                data-plasmic-override={overrides.beforeAfterSlider}
                className={classNames("__wab_instance", sty.beforeAfterSlider)}
                ctaLink={"#"}
                ctaText={"Act Now"}
                isDarkBg={false}
                settings={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? {
                        dots: false,
                        arrows: false,
                        infinite: true,
                        speed: 500,
                        slidesToShow: 1,
                        slidesToScroll: 1
                      }
                    : hasVariant(globalVariants, "screen", "midsize")
                    ? {
                        dots: false,
                        arrows: false,
                        infinite: true,
                        speed: 500,
                        slidesToShow: 2,
                        slidesToScroll: 1
                      }
                    : {
                        dots: false,
                        arrows: false,
                        infinite: true,
                        speed: 500,
                        slidesToShow: 3,
                        slidesToScroll: 1
                      }
                }
              >
                <TestimonialCard
                  className={classNames(
                    "__wab_instance",
                    sty.testimonialCard__rFqgo
                  )}
                  insta={"@anna_green"}
                  patient={"Anna Green"}
                  subtitle={"Results after one month with Botox"}
                  title={"Anna\u2019s Results"}
                />

                <TestimonialCard
                  className={classNames(
                    "__wab_instance",
                    sty.testimonialCard__whgPp
                  )}
                  insta={"@mila_sadowska"}
                  patient={"Mila Sadowska"}
                  subtitle={"Results after three weeks with Botox"}
                  title={"Mila\u2019s Results"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__vqiEq)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/image301ResultAvif.avif",
                      fullWidth: 379,
                      fullHeight: 379,
                      aspectRatio: undefined
                    }}
                  />
                </TestimonialCard>
                <TestimonialCard
                  className={classNames(
                    "__wab_instance",
                    sty.testimonialCard__oW3MI
                  )}
                  insta={"@iammonikaaa"}
                  patient={"Monika Miller"}
                  subtitle={"Results after two weeks with Botox"}
                  title={"Monika\u2019s Results"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__aiKe)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/image302ResultAvif.avif",
                      fullWidth: 379,
                      fullHeight: 379,
                      aspectRatio: undefined
                    }}
                  />
                </TestimonialCard>
              </TestimonialsSlider>
            </div>
          </section>
          <section
            data-plasmic-name={"botoxHelpedSection"}
            data-plasmic-override={overrides.botoxHelpedSection}
            className={classNames(projectcss.all, sty.botoxHelpedSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9IgFv)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__h0TYw)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__lJj0R)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__jJtq
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Botox Already "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{
                          fontStyle: "italic",
                          fontWeight: 500,
                          color: "#D19D51"
                        }}
                      >
                        {"Helped"}
                      </span>
                      <React.Fragment>{" 1,000,000+ People"}</React.Fragment>
                    </React.Fragment>
                  </h2>
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__aWpbi
                    )}
                  >
                    {
                      "Don't put off self-care \u2014 join satisfied people who have already experienced the benefits of Botox."
                    }
                  </p>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox___5Wi9P)}>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"botoxHelpedScroller"}
                  data-plasmic-override={overrides.botoxHelpedScroller}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.botoxHelpedScroller,
                    hasVariant(globalVariants, "screen", "midsize")
                      ? "botox-helped-scroller"
                      : undefined
                  )}
                >
                  <AreaExplainerCard
                    button={"Forehead"}
                    className={classNames(
                      "__wab_instance",
                      sty.areaExplainerCard__xBMjy
                    )}
                    subtitle={
                      "On the forehead and between the brows for a refreshed appearance."
                    }
                    title={"Forehead Lines and Frown Lines"}
                  />

                  <AreaExplainerCard
                    button={"Crow's Feet"}
                    className={classNames(
                      "__wab_instance",
                      sty.areaExplainerCard__eY5Xi
                    )}
                    subtitle={
                      "Gently relax the lines around the eyes to maintain a youthful, vibrant look."
                    }
                    title={"Crow's Feet"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___3XVOv)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image1Avif.png",
                        fullWidth: 287,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }}
                    />
                  </AreaExplainerCard>
                  <AreaExplainerCard
                    button={"Gummy Smile"}
                    className={classNames(
                      "__wab_instance",
                      sty.areaExplainerCard__pDpHl
                    )}
                    subtitle={
                      "Reduce the appearance of fine  lines around the mouth for a smooth smile."
                    }
                    title={"Smile Lines and Mouth Wrinkles"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lQ3N3)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image2Avif.png",
                        fullWidth: 287,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }}
                    />
                  </AreaExplainerCard>
                  <AreaExplainerCard
                    button={"Masseter"}
                    className={classNames(
                      "__wab_instance",
                      sty.areaExplainerCard__kLglZ
                    )}
                    subtitle={
                      "Relax jaw muscles to create a more contoured, slim jawline."
                    }
                    title={"Jawline Slimming"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__l0ZQ6)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image3Avif.png",
                        fullWidth: 287,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }}
                    />
                  </AreaExplainerCard>
                  <AreaExplainerCard
                    button={"Neck"}
                    className={classNames(
                      "__wab_instance",
                      sty.areaExplainerCard___6NW7
                    )}
                    subtitle={
                      "Minimize vertical neck lines and bands, restoring a smoother, firmer neckline."
                    }
                    title={"Neck Bands"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__cm5Af)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image4Avif.png",
                        fullWidth: 287,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }}
                    />
                  </AreaExplainerCard>
                  <AreaExplainerCard
                    button={"Armpits"}
                    className={classNames(
                      "__wab_instance",
                      sty.areaExplainerCard__y0Ei3
                    )}
                    subtitle={
                      "Effectively target sweat glands to reduce excessive sweating."
                    }
                    title={"Excessive Sweating (Hyperhidrosis)"}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__q2SJt)}
                      displayHeight={"auto"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/image5Avif.png",
                        fullWidth: 287,
                        fullHeight: 256,
                        aspectRatio: undefined
                      }}
                    />
                  </AreaExplainerCard>
                </Stack__>
              </div>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__p5T3P)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rD1Um)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__eeq1)}
              >
                <ReviewsRatingPill
                  className={classNames(
                    "__wab_instance",
                    sty.reviewsRatingPill__enE86
                  )}
                />

                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__otgId
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Join Our Satisfied "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontWeight: 500,
                        fontStyle: "italic",
                        color: "#FAD8A7"
                      }}
                    >
                      {"Clients"}
                    </span>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__qhN8C
                  )}
                >
                  {
                    "Over thousands of people have transformed their lives with Botox."
                  }
                </p>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__llpLu)}>
                <TestimonialsSlider
                  data-plasmic-name={"satisfiedClientsSlider"}
                  data-plasmic-override={overrides.satisfiedClientsSlider}
                  className={classNames(
                    "__wab_instance",
                    sty.satisfiedClientsSlider
                  )}
                  ctaLink={"#"}
                  ctaText={"Book Now"}
                  isDarkBg={true}
                  settings={{
                    dots: false,
                    arrows: false,
                    infinite: true,
                    speed: 500,
                    slidesToShow: 1,
                    slidesToScroll: 1
                  }}
                >
                  <BigTestimonial
                    author={"Anna Green"}
                    className={classNames(
                      "__wab_instance",
                      sty.bigTestimonial__nVsqa
                    )}
                    handle={"@anna_green"}
                    handleLink={"#"}
                    quote={
                      "I had an incredible experience with Botox at this clinic, and I can't recommend it enough! The specialists are absolute professionals\u2014knowledgeable, attentive, and genuinely committed to delivering outstanding results. The results have been life-changing. Thank you for an amazing experience!"
                    }
                  />

                  <BigTestimonial
                    author={"Julia N."}
                    className={classNames(
                      "__wab_instance",
                      sty.bigTestimonial__idCkB
                    )}
                    handle={"@julia_n"}
                    handleLink={"#"}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__gI0A)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/image301ResultAvif.avif",
                          fullWidth: 379,
                          fullHeight: 379,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    quote={
                      "I recently visited ImageLab and was thoroughly impressed. Kristen was incredibly attentive and caring, with exceptional attention to detail throughout my entire visit. Arya and the front desk team always take great care of everyone, ensuring a smooth and pleasant experience from start to finish. Unlike other places, they truly care and will never try to upsell you on services. I highly recommend ImageLab for their dedication to clients and exceptional care."
                    }
                  />

                  <BigTestimonial
                    author={"Jenna J."}
                    className={classNames(
                      "__wab_instance",
                      sty.bigTestimonial__vaWLu
                    )}
                    handle={"@jenna_j"}
                    handleLink={"#"}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__nJBtb)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/image302ResultAvif.avif",
                          fullWidth: 379,
                          fullHeight: 379,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    quote={
                      "My experience at ImageLab was nothing short of phenomenal. I was initially hesitant about getting Botox, but the professional and welcoming staff at ImageLab put me completely at ease. They took the time to thoroughly understand my concerns and desired outcome, and I never felt rushed or pressured. I got their Botox treatment for my forehead, and it looks even better than I expected!"
                    }
                  />

                  <BigTestimonial
                    author={"Denis L."}
                    className={classNames(
                      "__wab_instance",
                      sty.bigTestimonial__j87RD
                    )}
                    handle={"@denis_l"}
                    handleLink={"#"}
                    image={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__tkVfb)}
                        displayHeight={"auto"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"100%"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/_66Cc8477D26E0466Cff87411ImagelabBotoxResult2P8001Avif.webp",
                          fullWidth: 800,
                          fullHeight: 800,
                          aspectRatio: undefined
                        }}
                      />
                    }
                    quote={
                      "I ended up getting my Botox here and I was super happy with the end result. My skin looks great, and I definitely plan on coming again in the near future. On top of that, they have great customer service, and you can tell that they really go above and beyond to make you happy. Much appreciated. Thank you!"
                    }
                  />
                </TestimonialsSlider>
              </div>
            </Stack__>
          </section>
          <section className={classNames(projectcss.all, sty.section__qz9Z)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d6O5E)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__kmhJs)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__nCrwW
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Our "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontWeight: 500,
                        fontStyle: "italic",
                        color: "#D19D51"
                      }}
                    >
                      {"Answers"}
                    </span>
                    <React.Fragment>{"\nfor Your Questions"}</React.Fragment>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__sLxZu
                  )}
                >
                  {
                    "Already, 240+ clients have eliminated their doubts about Botox, and you can join them today!"
                  }
                </p>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__rlxr1)}
              >
                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq__bniJz)}
                  question={"Is Botox safe?"}
                />

                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq__v5DRl)}
                  question={"Will I look fake?"}
                />

                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq__b973O)}
                  question={"Will I look worse if I stop?"}
                />

                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq__qYdbC)}
                  question={"Are there any risks or side effects?"}
                />

                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq__aqSyK)}
                  question={"Is it painful?"}
                />

                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq__qjOOr)}
                  question={"When is the right time to start getting Botox?"}
                />

                <Faq
                  answer={
                    "Yes, Botox is a safe and effective treatment when administered by qualified professionals. It has been FDA-approved for cosmetic use for many years and is backed by extensive research and clinical studies. Our experienced specialists ensure the highest standards of safety and care, allowing you  to enjoy the benefits of Botox with confidence."
                  }
                  className={classNames("__wab_instance", sty.faq___70Ljp)}
                  question={"What qualifications do the doctors have?"}
                />
              </Stack__>
            </Stack__>
          </section>
          {false ? (
            <section className={classNames(projectcss.all, sty.section__kI06)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__xfcA)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "100vh"
                    : "0"
                }
                displayMinWidth={"0"}
                displayWidth={"100%"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/image22.avif",
                  fullWidth: 1440,
                  fullHeight: 900,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox__zva01)}>
                <h1
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1__alzRe
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <React.Fragment>{"Watch the\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic", fontWeight: 500 }}
                      >
                        {"Botox Process"}
                      </span>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <React.Fragment>{"Watch the "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic", fontWeight: 500 }}
                      >
                        {"Botox Process"}
                      </span>
                    </React.Fragment>
                  )}
                </h1>
                <Icon12Icon
                  className={classNames(projectcss.all, sty.svg___3JIs3)}
                  role={"img"}
                />

                <Button
                  className={classNames("__wab_instance", sty.button__yvmuC)}
                  color={"white"}
                >
                  {"Try It Now"}
                </Button>
              </div>
            </section>
          ) : null}
          <section className={classNames(projectcss.all, sty.section__lWjM)}>
            <div className={classNames(projectcss.all, sty.freeBox__mm1Rd)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__mMrv)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__imwVp
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Our "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontStyle: "italic",
                        fontWeight: 500,
                        color: "#D19D51"
                      }}
                    >
                      {"Location"}
                    </span>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__qKoYt
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "Don't put off your changes \u2014 come to us now and get "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 600 }}
                    >
                      {"FREE"}
                    </span>
                    <React.Fragment>{" first consultation!"}</React.Fragment>
                  </React.Fragment>
                </p>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dVM4)}
              >
                <ContactCardNew
                  className={classNames(
                    "__wab_instance",
                    sty.contactCardNew__og1Ej
                  )}
                  content={"(872) 285-6769"}
                  destination={"tel:+18722856769"}
                  title={"Call Us"}
                />

                <ContactCardNew
                  className={classNames(
                    "__wab_instance",
                    sty.contactCardNew__rm1Ex
                  )}
                  content={"info@imagelabmedspa.com"}
                  destination={"mailto:info@imagelabmedspa.com"}
                  title={"Contact Us"}
                />

                <ContactCardNew
                  className={classNames(
                    "__wab_instance",
                    sty.contactCardNew__l4Vbr
                  )}
                  content={"2033 W Roscoe St, Chicago, IL 60618"}
                  destination={"https://maps.app.goo.gl/RizTXzKMnXVkUewB7"}
                  title={"Visit Us"}
                />
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___3Ve7O)}
              >
                <Embed
                  data-plasmic-name={"embedHtml"}
                  data-plasmic-override={overrides.embedHtml}
                  className={classNames("__wab_instance", sty.embedHtml)}
                  code={
                    '<iframe\r\n  src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2966.9273842486487!2d-87.68167956453794!3d41.943098857643925!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x880fd26705a454b5%3A0x32f4424a257fd09b!2s2033%20W%20Roscoe%20St%2C%20Chicago%2C%20IL%2060618!5e0!3m2!1sen!2sus!4v1732486224603!5m2!1sen!2sus"\r\n  width="100%"\r\n  height="100%"\r\n  style="border: 0"\r\n  allowfullscreen\r\n  loading="lazy"\r\n  referrerpolicy="no-referrer-when-downgrade"\r\n></iframe>\r\n'
                  }
                />

                <div className={classNames(projectcss.all, sty.freeBox__gjMfA)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vwtQ)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rmFsx)}
                    >
                      <Icon14Icon
                        className={classNames(projectcss.all, sty.svg___8LThk)}
                        role={"img"}
                      />
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__l2ED9)}
                    >
                      <h4
                        className={classNames(
                          projectcss.all,
                          projectcss.h4,
                          projectcss.__wab_text,
                          sty.h4__zwJdL
                        )}
                      >
                        {"Working Hours"}
                      </h4>
                      <p
                        className={classNames(
                          projectcss.all,
                          projectcss.p,
                          projectcss.__wab_text,
                          sty.p__bvp2P
                        )}
                      >
                        {"Call us only on working hours"}
                      </p>
                    </Stack__>
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__rkSdp)}
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p___39IFj
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 500 }}
                        >
                          {"Monday & Tuesday:"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#7B7D7F" }}
                        >
                          {"10AM - 6PM"}
                        </span>
                      </React.Fragment>
                    </p>
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__q1Fmk
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 500 }}
                        >
                          {"Wednesday:"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#7B7D7F" }}
                        >
                          {"9AM - 3PM"}
                        </span>
                      </React.Fragment>
                    </p>
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__ytPpJ
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 500 }}
                        >
                          {"Thursday & Friday:"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#7B7D7F" }}
                        >
                          {"9AM - 6PM"}
                        </span>
                      </React.Fragment>
                    </p>
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__a0SKf
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 500 }}
                        >
                          {"Saturday:"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#7B7D7F" }}
                        >
                          {"9:30AM - 5:30PM"}
                        </span>
                      </React.Fragment>
                    </p>
                  </Stack__>
                </div>
              </Stack__>
            </div>
          </section>
          <section className={classNames(projectcss.all, sty.section__h2TW)}>
            <div className={classNames(projectcss.all, sty.freeBox__lSnUu)}>
              <DiscountPricingPill
                className={classNames(
                  "__wab_instance",
                  sty.discountPricingPill__dvwCm
                )}
              />

              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__yjqrs)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__lhEX
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Claim Your "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{
                        fontStyle: "italic",
                        fontWeight: 500,
                        color: "#FAD8A7"
                      }}
                    >
                      {"Special Offer"}
                    </span>
                    <React.Fragment>{" Now!"}</React.Fragment>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__meiVy
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {"Book your FREE consultation and get "}
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontWeight: 700 }}
                    >
                      {"30% DISCOUNT"}
                    </span>
                    <React.Fragment>
                      {" for first Botox procedure!"}
                    </React.Fragment>
                  </React.Fragment>
                </p>
              </Stack__>
              <Button
                data-plasmic-name={"specialOfferButton"}
                data-plasmic-override={overrides.specialOfferButton}
                className={classNames("__wab_instance", sty.specialOfferButton)}
                color={"white"}
              >
                {"Book Now"}
              </Button>
            </div>
          </section>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "hero",
    "heroButton",
    "heroImage",
    "threeCardsSection",
    "threeCards",
    "chooseBotoxSection",
    "chooseBotoxHeader",
    "chooseBotoxBar",
    "chooseBotoxDot",
    "chooseBotoxPoints",
    "chooseBotoxDot2",
    "chooseBotoxDot3",
    "chooseBotoxDot4",
    "chooseBotoxButton",
    "chooseBotoxImages",
    "howBotoxWorksSection",
    "howBotoxWorksHeader",
    "howBotoxWorksCards",
    "howBotoxWorksCardsMobile",
    "faceSection",
    "columns",
    "faceHeader",
    "facePills",
    "faceDots",
    "dots",
    "faceDot",
    "faceCard",
    "beforeAfterSection",
    "beforeAfterHeader",
    "beforeAfterSlider",
    "botoxHelpedSection",
    "botoxHelpedScroller",
    "satisfiedClientsSlider",
    "embedHtml",
    "specialOfferButton"
  ],

  hero: ["hero", "heroButton", "heroImage"],
  heroButton: ["heroButton"],
  heroImage: ["heroImage"],
  threeCardsSection: ["threeCardsSection", "threeCards"],
  threeCards: ["threeCards"],
  chooseBotoxSection: [
    "chooseBotoxSection",
    "chooseBotoxHeader",
    "chooseBotoxBar",
    "chooseBotoxDot",
    "chooseBotoxPoints",
    "chooseBotoxDot2",
    "chooseBotoxDot3",
    "chooseBotoxDot4",
    "chooseBotoxButton",
    "chooseBotoxImages"
  ],

  chooseBotoxHeader: ["chooseBotoxHeader"],
  chooseBotoxBar: ["chooseBotoxBar"],
  chooseBotoxDot: ["chooseBotoxDot"],
  chooseBotoxPoints: [
    "chooseBotoxPoints",
    "chooseBotoxDot2",
    "chooseBotoxDot3",
    "chooseBotoxDot4",
    "chooseBotoxButton"
  ],

  chooseBotoxDot2: ["chooseBotoxDot2"],
  chooseBotoxDot3: ["chooseBotoxDot3"],
  chooseBotoxDot4: ["chooseBotoxDot4"],
  chooseBotoxButton: ["chooseBotoxButton"],
  chooseBotoxImages: ["chooseBotoxImages"],
  howBotoxWorksSection: [
    "howBotoxWorksSection",
    "howBotoxWorksHeader",
    "howBotoxWorksCards",
    "howBotoxWorksCardsMobile"
  ],

  howBotoxWorksHeader: ["howBotoxWorksHeader"],
  howBotoxWorksCards: ["howBotoxWorksCards"],
  howBotoxWorksCardsMobile: ["howBotoxWorksCardsMobile"],
  faceSection: [
    "faceSection",
    "columns",
    "faceHeader",
    "facePills",
    "faceDots",
    "dots",
    "faceDot",
    "faceCard"
  ],

  columns: [
    "columns",
    "faceHeader",
    "facePills",
    "faceDots",
    "dots",
    "faceDot",
    "faceCard"
  ],

  faceHeader: ["faceHeader"],
  facePills: ["facePills"],
  faceDots: ["faceDots", "dots", "faceDot", "faceCard"],
  dots: ["dots", "faceDot"],
  faceDot: ["faceDot"],
  faceCard: ["faceCard"],
  beforeAfterSection: [
    "beforeAfterSection",
    "beforeAfterHeader",
    "beforeAfterSlider"
  ],

  beforeAfterHeader: ["beforeAfterHeader"],
  beforeAfterSlider: ["beforeAfterSlider"],
  botoxHelpedSection: ["botoxHelpedSection", "botoxHelpedScroller"],
  botoxHelpedScroller: ["botoxHelpedScroller"],
  satisfiedClientsSlider: ["satisfiedClientsSlider"],
  embedHtml: ["embedHtml"],
  specialOfferButton: ["specialOfferButton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicLander__ArgProps,
          internalVariantPropNames: PlasmicLander__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicLander__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicLander";
  } else {
    func.displayName = `PlasmicLander.${nodeName}`;
  }
  return func;
}

export const PlasmicLander = Object.assign(
  // Top-level PlasmicLander renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    heroButton: makeNodeComponent("heroButton"),
    heroImage: makeNodeComponent("heroImage"),
    threeCardsSection: makeNodeComponent("threeCardsSection"),
    threeCards: makeNodeComponent("threeCards"),
    chooseBotoxSection: makeNodeComponent("chooseBotoxSection"),
    chooseBotoxHeader: makeNodeComponent("chooseBotoxHeader"),
    chooseBotoxBar: makeNodeComponent("chooseBotoxBar"),
    chooseBotoxDot: makeNodeComponent("chooseBotoxDot"),
    chooseBotoxPoints: makeNodeComponent("chooseBotoxPoints"),
    chooseBotoxDot2: makeNodeComponent("chooseBotoxDot2"),
    chooseBotoxDot3: makeNodeComponent("chooseBotoxDot3"),
    chooseBotoxDot4: makeNodeComponent("chooseBotoxDot4"),
    chooseBotoxButton: makeNodeComponent("chooseBotoxButton"),
    chooseBotoxImages: makeNodeComponent("chooseBotoxImages"),
    howBotoxWorksSection: makeNodeComponent("howBotoxWorksSection"),
    howBotoxWorksHeader: makeNodeComponent("howBotoxWorksHeader"),
    howBotoxWorksCards: makeNodeComponent("howBotoxWorksCards"),
    howBotoxWorksCardsMobile: makeNodeComponent("howBotoxWorksCardsMobile"),
    faceSection: makeNodeComponent("faceSection"),
    columns: makeNodeComponent("columns"),
    faceHeader: makeNodeComponent("faceHeader"),
    facePills: makeNodeComponent("facePills"),
    faceDots: makeNodeComponent("faceDots"),
    dots: makeNodeComponent("dots"),
    faceDot: makeNodeComponent("faceDot"),
    faceCard: makeNodeComponent("faceCard"),
    beforeAfterSection: makeNodeComponent("beforeAfterSection"),
    beforeAfterHeader: makeNodeComponent("beforeAfterHeader"),
    beforeAfterSlider: makeNodeComponent("beforeAfterSlider"),
    botoxHelpedSection: makeNodeComponent("botoxHelpedSection"),
    botoxHelpedScroller: makeNodeComponent("botoxHelpedScroller"),
    satisfiedClientsSlider: makeNodeComponent("satisfiedClientsSlider"),
    embedHtml: makeNodeComponent("embedHtml"),
    specialOfferButton: makeNodeComponent("specialOfferButton"),
    // Metadata about props expected for PlasmicLander
    internalVariantProps: PlasmicLander__VariantProps,
    internalArgProps: PlasmicLander__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicLander;
/* prettier-ignore-end */
