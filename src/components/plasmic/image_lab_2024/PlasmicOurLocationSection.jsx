// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fpxTiFS69ULcX4wDGEfw3c
// Component: 90jT_0Y9mL-p
import * as React from "react";
import { useRouter } from "next/router";
import {
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import ContactCardNew from "../../ContactCardNew"; // plasmic-import: NLqAqGxR_jhT/component
import { Embed } from "@plasmicpkgs/plasmic-basic-components";
import { useScreenVariants as useScreenVariants_4IUcgkiijTv2 } from "../blank_website/PlasmicGlobalVariant__Screen"; // plasmic-import: 4iUCGKIIJTv2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../blank_website/plasmic.module.css"; // plasmic-import: fpxTiFS69ULcX4wDGEfw3c/projectcss
import sty from "./PlasmicOurLocationSection.module.css"; // plasmic-import: 90jT_0Y9mL-p/css
import PhoneIcon2SvgIcon from "./icons/PlasmicIcon__PhoneIcon2Svg"; // plasmic-import: MVAvtDZNtSt8/icon
import EmailIconSvgIcon from "./icons/PlasmicIcon__EmailIconSvg"; // plasmic-import: pGd7EYrfjRV6/icon
import PinIconSvgIcon from "./icons/PlasmicIcon__PinIconSvg"; // plasmic-import: XkLgLqcclsUa/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: 5h3DURpjzPGy/icon

createPlasmicElementProxy;

export const PlasmicOurLocationSection__VariantProps = new Array();

export const PlasmicOurLocationSection__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicOurLocationSection__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_4IUcgkiijTv2()
  });
  return (
    <section
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        sty.root
      )}
    >
      <div className={classNames(projectcss.all, sty.freeBox__ay8Fl)}>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__ggyYp)}
        >
          <h2
            data-plasmic-name={"h2"}
            data-plasmic-override={overrides.h2}
            className={classNames(
              projectcss.all,
              projectcss.h2,
              projectcss.__wab_text,
              sty.h2
            )}
          >
            <React.Fragment>
              <React.Fragment>{"Our "}</React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{
                  fontStyle: "italic",
                  fontWeight: 500,
                  color: "#D19D51"
                }}
              >
                {"Location"}
              </span>
            </React.Fragment>
          </h2>
          <p
            className={classNames(
              projectcss.all,
              projectcss.p,
              projectcss.__wab_text,
              sty.p__qLmrM
            )}
          >
            <React.Fragment>
              <React.Fragment>
                {"Don't put off your changes \u2014 come to us now and get "}
              </React.Fragment>
              <span
                className={"plasmic_default__all plasmic_default__span"}
                style={{ fontWeight: 600 }}
              >
                {"FREE"}
              </span>
              <React.Fragment>{" first consultation!"}</React.Fragment>
            </React.Fragment>
          </p>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__lXjhF)}
        >
          <ContactCardNew
            className={classNames("__wab_instance", sty.contactCardNew__pg9Uh)}
            content={"872-285-6769"}
            destination={"tel:+18722856769"}
            title={"Call Us"}
          >
            <PhoneIcon2SvgIcon
              className={classNames(projectcss.all, sty.svg__yaJhI)}
              role={"img"}
            />
          </ContactCardNew>
          <ContactCardNew
            className={classNames("__wab_instance", sty.contactCardNew__jcKsw)}
            content={"info@imagelabmedspa.com"}
            destination={"mailto:info@imagelabmedspa.com"}
            title={"Contact Us"}
          >
            <EmailIconSvgIcon
              className={classNames(projectcss.all, sty.svg__slHbk)}
              role={"img"}
            />
          </ContactCardNew>
          <ContactCardNew
            className={classNames("__wab_instance", sty.contactCardNew__mSwSe)}
            content={"2033 W Roscoe St, Chicago, IL 60618"}
            destination={"https://maps.app.goo.gl/RizTXzKMnXVkUewB7"}
            title={"Visit Us"}
          >
            <PinIconSvgIcon
              className={classNames(projectcss.all, sty.svg__po3CG)}
              role={"img"}
            />
          </ContactCardNew>
        </Stack__>
        <Stack__
          as={"div"}
          hasGap={true}
          className={classNames(projectcss.all, sty.freeBox__ohTsZ)}
        >
          <Embed
            data-plasmic-name={"embedHtml"}
            data-plasmic-override={overrides.embedHtml}
            className={classNames("__wab_instance", sty.embedHtml)}
            code={
              '<iframe\r\n  src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d2966.9273842486487!2d-87.68167956453794!3d41.943098857643925!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x880fd26705a454b5%3A0x32f4424a257fd09b!2s2033%20W%20Roscoe%20St%2C%20Chicago%2C%20IL%2060618!5e0!3m2!1sen!2sus!4v1732486224603!5m2!1sen!2sus"\r\n  width="100%"\r\n  height="100%"\r\n  style="border: 0"\r\n  allowfullscreen\r\n  loading="lazy"\r\n  referrerpolicy="no-referrer-when-downgrade"\r\n></iframe>\r\n'
            }
          />

          <div className={classNames(projectcss.all, sty.freeBox__qkevh)}>
            <div className={classNames(projectcss.all, sty.freeBox__zIuL4)}>
              <div className={classNames(projectcss.all, sty.freeBox___9L6Zz)}>
                <Icon14Icon
                  className={classNames(projectcss.all, sty.svg__pQsql)}
                  role={"img"}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__ppn)}
              >
                <h4
                  data-plasmic-name={"h4"}
                  data-plasmic-override={overrides.h4}
                  className={classNames(
                    projectcss.all,
                    projectcss.h4,
                    projectcss.__wab_text,
                    sty.h4
                  )}
                >
                  {"Working Hours"}
                </h4>
              </Stack__>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__d25J)}
            >
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__xEZz
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {"Monday & Tuesday:"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#7B7D7F" }}
                  >
                    {"10AM - 6PM"}
                  </span>
                </React.Fragment>
              </p>
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__oIlFl
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {"Wednesday:"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#7B7D7F" }}
                  >
                    {"9AM - 5PM"}
                  </span>
                </React.Fragment>
              </p>
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__cq7Gt
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {"Thursday & Friday:"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#7B7D7F" }}
                  >
                    {"9AM - 6PM"}
                  </span>
                </React.Fragment>
              </p>
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__bYk2T
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontWeight: 500 }}
                  >
                    {"Saturday:"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#7B7D7F" }}
                  >
                    {"9:30AM - 5:30PM"}
                  </span>
                </React.Fragment>
              </p>
            </Stack__>
          </div>
        </Stack__>
      </div>
    </section>
  );
}

const PlasmicDescendants = {
  root: ["root", "h2", "embedHtml", "h4"],
  h2: ["h2"],
  embedHtml: ["embedHtml"],
  h4: ["h4"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicOurLocationSection__ArgProps,
          internalVariantPropNames: PlasmicOurLocationSection__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicOurLocationSection__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicOurLocationSection";
  } else {
    func.displayName = `PlasmicOurLocationSection.${nodeName}`;
  }
  return func;
}

export const PlasmicOurLocationSection = Object.assign(
  // Top-level PlasmicOurLocationSection renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    h2: makeNodeComponent("h2"),
    embedHtml: makeNodeComponent("embedHtml"),
    h4: makeNodeComponent("h4"),
    // Metadata about props expected for PlasmicOurLocationSection
    internalVariantProps: PlasmicOurLocationSection__VariantProps,
    internalArgProps: PlasmicOurLocationSection__ArgProps
  }
);

export default PlasmicOurLocationSection;
/* prettier-ignore-end */
